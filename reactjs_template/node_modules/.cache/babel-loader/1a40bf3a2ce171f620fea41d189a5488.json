{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\Modal.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '../prop-types/ReducerProps';\n\nclass ModalComponent extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const {\n      color,\n      btn,\n      title,\n      message,\n      colored,\n      header,\n      rtl\n    } = this.props;\n    const {\n      modal\n    } = this.state;\n    let Icon;\n\n    switch (color) {\n      case 'primary':\n        Icon = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-pushpin modal__title-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      case 'success':\n        Icon = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-thumbs-up modal__title-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      case 'warning':\n        Icon = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-flag modal__title-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      case 'danger':\n        Icon = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-cross-circle modal__title-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    const modalClass = classNames({\n      'modal-dialog--colored': colored,\n      'modal-dialog--header': header\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: color,\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, btn), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modal,\n      toggle: this.toggle,\n      modalClassName: `${rtl.direction}-support`,\n      className: `modal-dialog--${color} ${modalClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"lnr lnr-cross modal__close-btn\",\n      type: \"button\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), header ? '' : Icon, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-modal  modal__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal__body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, message), /*#__PURE__*/React.createElement(ButtonToolbar, {\n      className: \"modal__footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"modal_cancel\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      className: \"modal_ok\",\n      outline: colored,\n      color: color,\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Ok\"))));\n  }\n\n}\n\nModalComponent.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  colored: PropTypes.bool,\n  header: PropTypes.bool,\n  btn: PropTypes.string.isRequired,\n  rtl: RTLProps.isRequired\n};\nModalComponent.defaultProps = {\n  title: '',\n  message: '',\n  colored: false,\n  header: false\n};\nexport default connect(state => ({\n  rtl: state.rtl\n}))(ModalComponent);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/Modal.jsx"],"names":["React","PureComponent","PropTypes","connect","Button","ButtonToolbar","Modal","classNames","RTLProps","ModalComponent","constructor","state","modal","toggle","bind","setState","prevState","render","color","btn","title","message","colored","header","rtl","props","Icon","modalClass","direction","propTypes","string","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '../prop-types/ReducerProps';\n\nclass ModalComponent extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    message: PropTypes.string,\n    color: PropTypes.string.isRequired,\n    colored: PropTypes.bool,\n    header: PropTypes.bool,\n    btn: PropTypes.string.isRequired,\n    rtl: RTLProps.isRequired,\n  };\n\n  static defaultProps = {\n    title: '',\n    message: '',\n    colored: false,\n    header: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      modal: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({ modal: !prevState.modal }));\n  }\n\n  render() {\n    const {\n      color, btn, title, message, colored, header, rtl,\n    } = this.props;\n    const { modal } = this.state;\n    let Icon;\n\n    switch (color) {\n      case 'primary':\n        Icon = <span className=\"lnr lnr-pushpin modal__title-icon\" />;\n        break;\n      case 'success':\n        Icon = <span className=\"lnr lnr-thumbs-up modal__title-icon\" />;\n        break;\n      case 'warning':\n        Icon = <span className=\"lnr lnr-flag modal__title-icon\" />;\n        break;\n      case 'danger':\n        Icon = <span className=\"lnr lnr-cross-circle modal__title-icon\" />;\n        break;\n      default:\n        break;\n    }\n    const modalClass = classNames({\n      'modal-dialog--colored': colored,\n      'modal-dialog--header': header,\n    });\n\n    return (\n      <div>\n        <Button color={color} onClick={this.toggle}>{btn}</Button>\n        <Modal\n          isOpen={modal}\n          toggle={this.toggle}\n          modalClassName={`${rtl.direction}-support`}\n          className={`modal-dialog--${color} ${modalClass}`}\n        >\n          <div className=\"modal__header\">\n            <button className=\"lnr lnr-cross modal__close-btn\" type=\"button\" onClick={this.toggle} />\n            {header ? '' : Icon}\n            <h4 className=\"text-modal  modal__title\">{title}</h4>\n          </div>\n          <div className=\"modal__body\">\n            {message}\n          </div>\n          <ButtonToolbar className=\"modal__footer\">\n            <Button className=\"modal_cancel\" onClick={this.toggle}>Cancel</Button>{' '}\n            <Button className=\"modal_ok\" outline={colored} color={color} onClick={this.toggle}>Ok</Button>\n          </ButtonToolbar>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({\n  rtl: state.rtl,\n}))(ModalComponent);\n"]},"metadata":{},"sourceType":"module"}