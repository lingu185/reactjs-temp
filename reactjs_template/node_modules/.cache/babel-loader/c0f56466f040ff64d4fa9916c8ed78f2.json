{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Dashboards\\\\ECommerce\\\\components\\\\ProductSales.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\nconst data = [{\n  name: 'Mon',\n  plan: 590,\n  pv: 800,\n  current: 1400\n}, {\n  name: 'Tue',\n  plan: 868,\n  pv: 967,\n  current: 1506\n}, {\n  name: 'Wed',\n  plan: 1397,\n  pv: 1098,\n  current: 989\n}, {\n  name: 'Thu',\n  plan: 1480,\n  pv: 1200,\n  current: 1228\n}, {\n  name: 'Fri',\n  plan: 1520,\n  pv: 1108,\n  current: 1100\n}, {\n  name: 'Sat',\n  plan: 1520,\n  pv: 1108,\n  current: 1100\n}, {\n  name: 'Sun',\n  plan: 1400,\n  pv: 680,\n  current: 1700\n}];\n\nconst ProductSales = ({\n  t,\n  rtl,\n  themeName\n}) => /*#__PURE__*/React.createElement(Panel, {\n  lg: 12,\n  title: t('dashboard_commerce.product_sales'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  dir: \"ltr\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n  height: 250,\n  className: \"dashboard__area\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(AreaChart, {\n  data: data,\n  margin: {\n    top: 20,\n    left: -15,\n    bottom: 20\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(XAxis, {\n  dataKey: \"name\",\n  tickLine: false,\n  reversed: rtl === 'rtl',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(YAxis, {\n  tickLine: false,\n  orientation: rtl === 'rtl' ? 'right' : 'left',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n})), /*#__PURE__*/React.createElement(Legend, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(CartesianGrid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Area, {\n  name: \"Current Sales\",\n  type: \"monotone\",\n  dataKey: \"current\",\n  fill: \"#4ce1b6\",\n  stroke: \"#4ce1b6\",\n  fillOpacity: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Area, {\n  name: \"Plan Sales\",\n  type: \"monotone\",\n  dataKey: \"plan\",\n  fill: \"#70bbfd\",\n  stroke: \"#70bbfd\",\n  fillOpacity: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }\n})))));\n\nProductSales.propTypes = {\n  t: PropTypes.func.isRequired,\n  rtl: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(withTranslation('common')(ProductSales));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Dashboards/ECommerce/components/ProductSales.jsx"],"names":["React","connect","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","withTranslation","PropTypes","Panel","getTooltipStyles","data","name","plan","pv","current","ProductSales","t","rtl","themeName","top","left","bottom","propTypes","func","isRequired","string","state","theme","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SADF,EACaC,IADb,EACmBC,KADnB,EAC0BC,KAD1B,EACiCC,aADjC,EACgDC,OADhD,EACyDC,MADzD,EACiEC,mBADjE,QAEO,UAFP;AAGA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AAEA,OAAOC,gBAAP,MAA6B,4BAA7B;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,IAAI,EAAE,KADM;AACCC,EAAAA,IAAI,EAAE,GADP;AACYC,EAAAA,EAAE,EAAE,GADhB;AACqBC,EAAAA,OAAO,EAAE;AAD9B,CAAD,EAGb;AACEH,EAAAA,IAAI,EAAE,KADR;AACeC,EAAAA,IAAI,EAAE,GADrB;AAC0BC,EAAAA,EAAE,EAAE,GAD9B;AACmCC,EAAAA,OAAO,EAAE;AAD5C,CAHa,EAMb;AACEH,EAAAA,IAAI,EAAE,KADR;AACeC,EAAAA,IAAI,EAAE,IADrB;AAC2BC,EAAAA,EAAE,EAAE,IAD/B;AACqCC,EAAAA,OAAO,EAAE;AAD9C,CANa,EASb;AACEH,EAAAA,IAAI,EAAE,KADR;AACeC,EAAAA,IAAI,EAAE,IADrB;AAC2BC,EAAAA,EAAE,EAAE,IAD/B;AACqCC,EAAAA,OAAO,EAAE;AAD9C,CATa,EAYb;AACEH,EAAAA,IAAI,EAAE,KADR;AACeC,EAAAA,IAAI,EAAE,IADrB;AAC2BC,EAAAA,EAAE,EAAE,IAD/B;AACqCC,EAAAA,OAAO,EAAE;AAD9C,CAZa,EAeb;AACEH,EAAAA,IAAI,EAAE,KADR;AACeC,EAAAA,IAAI,EAAE,IADrB;AAC2BC,EAAAA,EAAE,EAAE,IAD/B;AACqCC,EAAAA,OAAO,EAAE;AAD9C,CAfa,EAkBb;AACEH,EAAAA,IAAI,EAAE,KADR;AACeC,EAAAA,IAAI,EAAE,IADrB;AAC2BC,EAAAA,EAAE,EAAE,GAD/B;AACoCC,EAAAA,OAAO,EAAE;AAD7C,CAlBa,CAAb;;AAsBA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,CAAF;AAAKC,EAAAA,GAAL;AAAUC,EAAAA;AAAV,CAAD,kBACnB,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAE,EAAX;AAAe,EAAA,KAAK,EAAEF,CAAC,CAAC,kCAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,mBAAD;AAAqB,EAAA,MAAM,EAAE,GAA7B;AAAkC,EAAA,SAAS,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAW,EAAA,IAAI,EAAEN,IAAjB;AAAuB,EAAA,MAAM,EAAE;AAAES,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE,CAAC,EAAlB;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,OAAO,EAAC,MAAf;AAAsB,EAAA,QAAQ,EAAE,KAAhC;AAAuC,EAAA,QAAQ,EAAEJ,GAAG,KAAK,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,KAAD;AAAO,EAAA,QAAQ,EAAE,KAAjB;AAAwB,EAAA,WAAW,EAAEA,GAAG,KAAK,KAAR,GAAgB,OAAhB,GAA0B,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,OAAD,oBAAaR,gBAAgB,CAACS,SAAD,EAAY,cAAZ,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHF,eAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,eAME,oBAAC,IAAD;AACE,EAAA,IAAI,EAAC,eADP;AAEE,EAAA,IAAI,EAAC,UAFP;AAGE,EAAA,OAAO,EAAC,SAHV;AAIE,EAAA,IAAI,EAAC,SAJP;AAKE,EAAA,MAAM,EAAC,SALT;AAME,EAAA,WAAW,EAAE,GANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,eAcE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,YAAX;AAAwB,EAAA,IAAI,EAAC,UAA7B;AAAwC,EAAA,OAAO,EAAC,MAAhD;AAAuD,EAAA,IAAI,EAAC,SAA5D;AAAsE,EAAA,MAAM,EAAC,SAA7E;AAAuF,EAAA,WAAW,EAAE,GAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdF,CADF,CADF,CADF,CADF;;AAyBAH,YAAY,CAACO,SAAb,GAAyB;AACvBN,EAAAA,CAAC,EAAET,SAAS,CAACgB,IAAV,CAAeC,UADK;AAEvBP,EAAAA,GAAG,EAAEV,SAAS,CAACkB,MAAV,CAAiBD,UAFC;AAGvBN,EAAAA,SAAS,EAAEX,SAAS,CAACkB,MAAV,CAAiBD;AAHL,CAAzB;AAMA,eAAe3B,OAAO,CAAC6B,KAAK,KAAK;AAAER,EAAAA,SAAS,EAAEQ,KAAK,CAACC,KAAN,CAAYC;AAAzB,CAAL,CAAN,CAAP,CAAyDtB,eAAe,CAAC,QAAD,CAAf,CAA0BS,YAA1B,CAAzD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\n\nimport getTooltipStyles from '../../../../shared/helpers';\n\nconst data = [{\n  name: 'Mon', plan: 590, pv: 800, current: 1400,\n},\n{\n  name: 'Tue', plan: 868, pv: 967, current: 1506,\n},\n{\n  name: 'Wed', plan: 1397, pv: 1098, current: 989,\n},\n{\n  name: 'Thu', plan: 1480, pv: 1200, current: 1228,\n},\n{\n  name: 'Fri', plan: 1520, pv: 1108, current: 1100,\n},\n{\n  name: 'Sat', plan: 1520, pv: 1108, current: 1100,\n},\n{\n  name: 'Sun', plan: 1400, pv: 680, current: 1700,\n}];\n\nconst ProductSales = ({ t, rtl, themeName }) => (\n  <Panel lg={12} title={t('dashboard_commerce.product_sales')}>\n    <div dir=\"ltr\">\n      <ResponsiveContainer height={250} className=\"dashboard__area\">\n        <AreaChart data={data} margin={{ top: 20, left: -15, bottom: 20 }}>\n          <XAxis dataKey=\"name\" tickLine={false} reversed={rtl === 'rtl'} />\n          <YAxis tickLine={false} orientation={rtl === 'rtl' ? 'right' : 'left'} />\n          <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n          <Legend />\n          <CartesianGrid />\n          <Area\n            name=\"Current Sales\"\n            type=\"monotone\"\n            dataKey=\"current\"\n            fill=\"#4ce1b6\"\n            stroke=\"#4ce1b6\"\n            fillOpacity={0.2}\n          />\n          <Area name=\"Plan Sales\" type=\"monotone\" dataKey=\"plan\" fill=\"#70bbfd\" stroke=\"#70bbfd\" fillOpacity={0.2} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  </Panel>\n);\n\nProductSales.propTypes = {\n  t: PropTypes.func.isRequired,\n  rtl: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(ProductSales));\n"]},"metadata":{},"sourceType":"module"}