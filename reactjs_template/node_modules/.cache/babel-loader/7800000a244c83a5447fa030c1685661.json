{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Dashboards\\\\Crypto\\\\index.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BTC from './components/BTC';\nimport ETH from './components/ETH';\nimport BCH from './components/BCH';\nimport XRP from './components/XRP';\nimport TradeHistory from './components/TradeHistory';\nimport BtcEth from './components/BtcEth';\nimport CryptotrendsToday from './components/CryptotrendsToday';\nimport TopTen from './components/TopTen';\nimport PlaceOrder from './components/PlaceOrder';\nimport { deleteCryptoTableData } from '../../../redux/actions/cryptoTableActions';\nimport { CryptoTableProps } from '../../../shared/prop-types/TablesProps';\nimport { ThemeProps, RTLProps } from '../../../shared/prop-types/ReducerProps';\n\nclass CryptoDashboard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteCryptoTableData = (index, e) => {\n      const {\n        dispatch,\n        cryptoTable\n      } = this.props;\n      e.preventDefault();\n      const arrayCopy = [...cryptoTable];\n      arrayCopy.splice(index, 1);\n      dispatch(deleteCryptoTableData(arrayCopy));\n    };\n  }\n\n  render() {\n    const {\n      t,\n      cryptoTable,\n      rtl,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, t('dashboard_crypto.page_title')))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BTC, {\n      dir: rtl.direction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ETH, {\n      dir: rtl.direction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BCH, {\n      dir: rtl.direction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(XRP, {\n      dir: rtl.direction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TradeHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BtcEth, {\n      dir: rtl.direction,\n      theme: theme.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CryptotrendsToday, {\n      dir: rtl.direction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PlaceOrder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TopTen, {\n      cryptoTable: cryptoTable,\n      onDeleteCryptoTableData: this.onDeleteCryptoTableData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nCryptoDashboard.propTypes = {\n  t: PropTypes.func.isRequired,\n  cryptoTable: CryptoTableProps.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired,\n  theme: ThemeProps.isRequired\n};\nexport default connect(state => ({\n  cryptoTable: state.cryptoTable.items,\n  rtl: state.rtl,\n  theme: state.theme\n}))(withTranslation('common')(CryptoDashboard));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Dashboards/Crypto/index.jsx"],"names":["React","PureComponent","Col","Container","Row","withTranslation","connect","PropTypes","BTC","ETH","BCH","XRP","TradeHistory","BtcEth","CryptotrendsToday","TopTen","PlaceOrder","deleteCryptoTableData","CryptoTableProps","ThemeProps","RTLProps","CryptoDashboard","onDeleteCryptoTableData","index","e","dispatch","cryptoTable","props","preventDefault","arrayCopy","splice","render","t","rtl","theme","direction","className","propTypes","func","isRequired","state","items"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BTC from './components/BTC';\nimport ETH from './components/ETH';\nimport BCH from './components/BCH';\nimport XRP from './components/XRP';\nimport TradeHistory from './components/TradeHistory';\nimport BtcEth from './components/BtcEth';\nimport CryptotrendsToday from './components/CryptotrendsToday';\nimport TopTen from './components/TopTen';\nimport PlaceOrder from './components/PlaceOrder';\nimport { deleteCryptoTableData } from '../../../redux/actions/cryptoTableActions';\nimport { CryptoTableProps } from '../../../shared/prop-types/TablesProps';\nimport { ThemeProps, RTLProps } from '../../../shared/prop-types/ReducerProps';\n\nclass CryptoDashboard extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    cryptoTable: CryptoTableProps.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    rtl: RTLProps.isRequired,\n    theme: ThemeProps.isRequired,\n  };\n\n  onDeleteCryptoTableData = (index, e) => {\n    const { dispatch, cryptoTable } = this.props;\n    e.preventDefault();\n    const arrayCopy = [...cryptoTable];\n    arrayCopy.splice(index, 1);\n    dispatch(deleteCryptoTableData(arrayCopy));\n  };\n\n  render() {\n    const {\n      t, cryptoTable, rtl, theme,\n    } = this.props;\n\n    return (\n      <Container className=\"dashboard\">\n        <Row>\n          <Col md={12}>\n            <h3 className=\"page-title\">{t('dashboard_crypto.page_title')}</h3>\n          </Col>\n        </Row>\n        <Row>\n          <BTC dir={rtl.direction} />\n          <ETH dir={rtl.direction} />\n          <BCH dir={rtl.direction} />\n          <XRP dir={rtl.direction} />\n        </Row>\n        <Row>\n          <TradeHistory />\n          <BtcEth\n            dir={rtl.direction}\n            theme={theme.className}\n          />\n          <CryptotrendsToday dir={rtl.direction} />\n          <PlaceOrder />\n          <TopTen cryptoTable={cryptoTable} onDeleteCryptoTableData={this.onDeleteCryptoTableData} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default connect(state => ({\n  cryptoTable: state.cryptoTable.items,\n  rtl: state.rtl,\n  theme: state.theme,\n}))(withTranslation('common')(CryptoDashboard));\n"]},"metadata":{},"sourceType":"module"}