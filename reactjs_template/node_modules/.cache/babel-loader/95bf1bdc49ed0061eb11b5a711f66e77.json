{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Form\\\\FloatingLabelsForm\\\\components\\\\AnimatedLineFormWithLabels.jsx\";\n\n/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport { Card, CardBody, Col, Button, ButtonToolbar } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error\n  },\n  children,\n  select,\n  type,\n  multiline\n}) => /*#__PURE__*/React.createElement(TextField, {\n  className: \"material-form__field\",\n  label: label,\n  type: type,\n  error: touched && error,\n  value: input.value,\n  children: children,\n  select: select,\n  multiline: multiline,\n  onChange: e => {\n    e.preventDefault();\n    input.onChange(e.target.value);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n});\n\nrenderTextField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  }),\n  select: PropTypes.bool,\n  children: PropTypes.arrayOf(PropTypes.element),\n  type: PropTypes.string,\n  multiline: PropTypes.bool\n};\nrenderTextField.defaultProps = {\n  meta: null,\n  select: false,\n  children: [],\n  type: 'text',\n  multiline: false\n};\n\nconst AnimatedLineFormWithLabels = ({\n  handleSubmit,\n  reset,\n  t\n}) => /*#__PURE__*/React.createElement(Col, {\n  md: 12,\n  lg: 12,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }\n}, t('forms.floating_labels_form.animated_line_inputs')), /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"subhead\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 11\n  }\n}, \"Material fields with a property \", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 67\n  }\n}, \"label\"))), /*#__PURE__*/React.createElement(\"form\", {\n  className: \"material-form\",\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"username\",\n  component: renderTextField,\n  placeholder: \"Name\",\n  label: \"Username\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"email\",\n  component: renderTextField,\n  placeholder: \"example@mail.com\",\n  type: \"email\",\n  label: \"Email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"url\",\n  component: renderTextField,\n  placeholder: \"https://themeforest.net\",\n  label: \"URL\",\n  type: \"url\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"password\",\n  component: renderTextField,\n  type: \"password\",\n  label: \"Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"select\",\n  component: renderTextField,\n  select: true,\n  label: \"Select Option\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(MenuItem, {\n  className: \"material-form__option\",\n  value: \"one\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 15\n  }\n}, \"One\"), /*#__PURE__*/React.createElement(MenuItem, {\n  className: \"material-form__option\",\n  value: \"two\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 15\n  }\n}, \"Two\"))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"textarea\",\n  component: renderTextField,\n  placeholder: \"Type message here\",\n  multiline: true,\n  rowsMax: \"4\",\n  label: \"Text Area\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(ButtonToolbar, {\n  className: \"form__button-toolbar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  color: \"primary\",\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 13\n  }\n}, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n  type: \"button\",\n  onClick: reset,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }\n}, \"Cancel\"))))));\n\nAnimatedLineFormWithLabels.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired\n};\nexport default reduxForm({\n  form: 'floating_labels_form' // a unique identifier for this form\n\n})(withTranslation('common')(AnimatedLineFormWithLabels));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Form/FloatingLabelsForm/components/AnimatedLineFormWithLabels.jsx"],"names":["React","Card","CardBody","Col","Button","ButtonToolbar","Field","reduxForm","TextField","MenuItem","withTranslation","PropTypes","renderTextField","input","label","meta","touched","error","children","select","type","multiline","value","e","preventDefault","onChange","target","propTypes","shape","isRequired","string","bool","arrayOf","element","defaultProps","AnimatedLineFormWithLabels","handleSubmit","reset","t","func","form"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-children-prop */\nimport React from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst renderTextField = ({\n  input, label, meta: { touched, error }, children, select, type, multiline,\n}) => (\n  <TextField\n    className=\"material-form__field\"\n    label={label}\n    type={type}\n    error={touched && error}\n    value={input.value}\n    children={children}\n    select={select}\n    multiline={multiline}\n    onChange={(e) => {\n      e.preventDefault();\n      input.onChange(e.target.value);\n    }}\n  />\n);\n\nrenderTextField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n  select: PropTypes.bool,\n  children: PropTypes.arrayOf(PropTypes.element),\n  type: PropTypes.string,\n  multiline: PropTypes.bool,\n};\n\nrenderTextField.defaultProps = {\n  meta: null,\n  select: false,\n  children: [],\n  type: 'text',\n  multiline: false,\n};\n\nconst AnimatedLineFormWithLabels = ({ handleSubmit, reset, t }) => (\n  <Col md={12} lg={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">{t('forms.floating_labels_form.animated_line_inputs')}</h5>\n          <h5 className=\"subhead\">Material fields with a property <span className=\"red-text\">label</span></h5>\n        </div>\n        <form className=\"material-form\" onSubmit={handleSubmit}>\n          <div>\n            <Field\n              name=\"username\"\n              component={renderTextField}\n              placeholder=\"Name\"\n              label=\"Username\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"email\"\n              component={renderTextField}\n              placeholder=\"example@mail.com\"\n              type=\"email\"\n              label=\"Email\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"url\"\n              component={renderTextField}\n              placeholder=\"https://themeforest.net\"\n              label=\"URL\"\n              type=\"url\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"password\"\n              component={renderTextField}\n              type=\"password\"\n              label=\"Password\"\n            />\n          </div>\n          <div>\n            <Field\n              name=\"select\"\n              component={renderTextField}\n              select\n              label=\"Select Option\"\n            >\n              <MenuItem className=\"material-form__option\" value=\"one\">One</MenuItem>\n              <MenuItem className=\"material-form__option\" value=\"two\">Two</MenuItem>\n            </Field>\n          </div>\n          <div>\n            <Field\n              name=\"textarea\"\n              component={renderTextField}\n              placeholder=\"Type message here\"\n              multiline\n              rowsMax=\"4\"\n              label=\"Text Area\"\n            />\n          </div>\n          <ButtonToolbar className=\"form__button-toolbar\">\n            <Button color=\"primary\" type=\"submit\">Submit</Button>\n            <Button type=\"button\" onClick={reset}>\n              Cancel\n            </Button>\n          </ButtonToolbar>\n        </form>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nAnimatedLineFormWithLabels.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: 'floating_labels_form', // a unique identifier for this form\n})(withTranslation('common')(AnimatedLineFormWithLabels));\n"]},"metadata":{},"sourceType":"module"}