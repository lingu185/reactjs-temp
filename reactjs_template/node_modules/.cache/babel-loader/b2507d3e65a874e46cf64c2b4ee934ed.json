{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\ECommerce\\\\OrdersList\\\\components\\\\OrdersListTable.jsx\";\n\n/* eslint-disable react/no-unused-state */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\nconst MoneyFormatter = ({\n  value\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, \"$\", value);\n\nMoneyFormatter.propTypes = {\n  value: PropTypes.string.isRequired\n};\n\nconst StatusFormatter = ({\n  value\n}) => value === 'Enabled' ? /*#__PURE__*/React.createElement(\"span\", {\n  className: \"badge badge-success\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }\n}, \"Enabled\") : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"badge badge-disabled\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, \"Disabled\");\n\nStatusFormatter.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport default class OrdersListTable extends PureComponent {\n  constructor() {\n    super();\n\n    this.onChangePage = pageOfItems => {\n      // update state with new page of items\n      this.setState({\n        pageOfItems\n      });\n    };\n\n    this.getRandomDate = (start, end) => new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n\n    this.createRows = numberOfRows => {\n      const rows = [];\n\n      for (let i = 1; i < numberOfRows + 1; i += 1) {\n        rows.push({\n          id: Math.min(99999, Math.round(Math.random() * 99999 + 1000)),\n          date: this.getRandomDate(new Date(2017, 3, 1), new Date(2018, 3, 1)),\n          customer_name: ['Maria', 'Bobby  ', 'Alexander'][Math.floor(Math.random() * 3)],\n          price: Math.min(1000, Math.random() * 1000 + 20).toFixed(2),\n          tax: Math.min(10, Math.random() * 10).toFixed(2),\n          delivery: Math.min(10, Math.random() * 10).toFixed(2),\n          quantity: Math.min(5, Math.round(Math.random() * 5 + 1)),\n          status: ['Enabled', 'Disabled'][Math.floor(Math.random() * 2)]\n        });\n      }\n\n      return rows;\n    };\n\n    this.heads = [{\n      key: 'id',\n      name: 'ID',\n      width: 80,\n      sortable: true\n    }, {\n      key: 'date',\n      name: 'Date',\n      sortable: true\n    }, {\n      key: 'customer_name',\n      name: 'Customer Name',\n      sortable: true\n    }, {\n      key: 'price',\n      name: 'Price',\n      sortable: true,\n      formatter: MoneyFormatter\n    }, {\n      key: 'tax',\n      name: 'Tax',\n      sortable: true,\n      formatter: MoneyFormatter\n    }, {\n      key: 'delivery',\n      name: 'Delivery',\n      sortable: true,\n      formatter: MoneyFormatter\n    }, {\n      key: 'quantity',\n      name: 'Quantity',\n      sortable: true\n    }, {\n      key: 'status',\n      name: 'Status',\n      sortable: true,\n      formatter: StatusFormatter,\n      width: 110\n    }];\n    this.state = {\n      rows: this.createRows(17),\n      pageOfItems: []\n    };\n  }\n\n  render() {\n    const {\n      rows\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"bold-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Orders list\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"typography-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Show\", /*#__PURE__*/React.createElement(\"select\", {\n      className: \"select-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"30\")), \"entries\"), /*#__PURE__*/React.createElement(EditTable, {\n      heads: this.heads,\n      rows: rows,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/ECommerce/OrdersList/components/OrdersListTable.jsx"],"names":["React","PureComponent","Card","CardBody","Col","PropTypes","EditTable","MoneyFormatter","value","propTypes","string","isRequired","StatusFormatter","OrdersListTable","constructor","onChangePage","pageOfItems","setState","getRandomDate","start","end","Date","getTime","Math","random","toLocaleDateString","createRows","numberOfRows","rows","i","push","id","min","round","date","customer_name","floor","price","toFixed","tax","delivery","quantity","status","heads","key","name","width","sortable","formatter","state","render"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\nconst MoneyFormatter = ({ value }) => (\n  <div>\n    ${value}\n  </div>\n);\n\nMoneyFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nconst StatusFormatter = ({ value }) => (\n  value === 'Enabled' ? <span className=\"badge badge-success\">Enabled</span>\n    : <span className=\"badge badge-disabled\">Disabled</span>\n);\n\nStatusFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default class OrdersListTable extends PureComponent {\n  constructor() {\n    super();\n    this.heads = [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 80,\n        sortable: true,\n      },\n      {\n        key: 'date',\n        name: 'Date',\n        sortable: true,\n      },\n      {\n        key: 'customer_name',\n        name: 'Customer Name',\n        sortable: true,\n      },\n      {\n        key: 'price',\n        name: 'Price',\n        sortable: true,\n        formatter: MoneyFormatter,\n      },\n      {\n        key: 'tax',\n        name: 'Tax',\n        sortable: true,\n        formatter: MoneyFormatter,\n      },\n      {\n        key: 'delivery',\n        name: 'Delivery',\n        sortable: true,\n        formatter: MoneyFormatter,\n      },\n      {\n        key: 'quantity',\n        name: 'Quantity',\n        sortable: true,\n      },\n      {\n        key: 'status',\n        name: 'Status',\n        sortable: true,\n        formatter: StatusFormatter,\n        width: 110,\n      },\n    ];\n\n    this.state = {\n      rows: this.createRows(17),\n      pageOfItems: [],\n    };\n  }\n\n  onChangePage = (pageOfItems) => {\n    // update state with new page of items\n    this.setState({ pageOfItems });\n  };\n\n  getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  createRows = (numberOfRows) => {\n    const rows = [];\n\n    for (let i = 1; i < numberOfRows + 1; i += 1) {\n      rows.push({\n        id: Math.min(99999, Math.round((Math.random() * 99999) + 1000)),\n        date: this.getRandomDate(new Date(2017, 3, 1), new Date(2018, 3, 1)),\n        customer_name: ['Maria', 'Bobby  ', 'Alexander'][Math.floor((Math.random() * 3))],\n        price: Math.min(1000, (Math.random() * 1000) + 20).toFixed(2),\n        tax: Math.min(10, Math.random() * 10).toFixed(2),\n        delivery: Math.min(10, Math.random() * 10).toFixed(2),\n        quantity: Math.min(5, Math.round((Math.random() * 5) + 1)),\n        status: ['Enabled', 'Disabled'][Math.floor((Math.random() * 2))],\n      });\n    }\n    return rows;\n  };\n\n  render() {\n    const { rows } = this.state;\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">Orders list</h5>\n            </div>\n            <p className=\"typography-message\">Show\n              <select className=\"select-options\">\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n                <option value=\"30\">30</option>\n              </select>\n              entries\n            </p>\n            <EditTable heads={this.heads} rows={rows} />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}