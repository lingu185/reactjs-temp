{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\text-editor\\\\TextEditor.jsx\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport PropTypes from 'prop-types';\nconst ToolbarOptions = {\n  options: ['inline', 'blockType', 'list', 'textAlign', 'link', 'emoji', 'image', 'history'],\n  inline: {\n    options: ['bold', 'italic', 'underline']\n  }\n};\nexport default class TextEditorTwo extends Component {\n  constructor() {\n    super();\n\n    this.onEditorStateChange = editorState => {\n      const {\n        onChange\n      } = this.props;\n      this.setState({\n        editorState\n      });\n\n      if (onChange) {\n        onChange(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n      }\n    };\n\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\n  }\n\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: editorState,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      onEditorStateChange: this.onEditorStateChange,\n      toolbar: ToolbarOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nTextEditorTwo.propTypes = {\n  onChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/text-editor/TextEditor.jsx"],"names":["React","Component","EditorState","convertToRaw","Editor","draftToHtml","PropTypes","ToolbarOptions","options","inline","TextEditorTwo","constructor","onEditorStateChange","editorState","onChange","props","setState","getCurrentContent","state","createEmpty","bind","render","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,MAAxB,EAAgC,WAAhC,EAA6C,MAA7C,EAAqD,OAArD,EAA8D,OAA9D,EAAuE,SAAvE,CADY;AAErBC,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;AADH;AAFa,CAAvB;AAOA,eAAe,MAAME,aAAN,SAA4BT,SAA5B,CAAsC;AAKnDU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,mBARc,GAQSC,WAAD,IAAiB;AACrC,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AAEA,WAAKC,QAAL,CAAc;AACZH,QAAAA;AADY,OAAd;;AAGA,UAAIC,QAAJ,EAAc;AAAEA,QAAAA,QAAQ,CAACT,WAAW,CAACF,YAAY,CAACU,WAAW,CAACI,iBAAZ,EAAD,CAAb,CAAZ,CAAR;AAAuE;AACxF,KAfa;;AAEZ,SAAKC,KAAL,GAAa;AACXL,MAAAA,WAAW,EAAEX,WAAW,CAACiB,WAAZ;AADF,KAAb;AAGA,SAAKP,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBQ,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAWDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAkB,KAAKK,KAA7B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAEL,WADf;AAEE,MAAA,gBAAgB,EAAC,cAFnB;AAGE,MAAA,eAAe,EAAC,aAHlB;AAIE,MAAA,mBAAmB,EAAE,KAAKD,mBAJ5B;AAKE,MAAA,OAAO,EAAEL,cALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AAnCkD;AAAhCG,a,CACZY,S,GAAY;AACjBR,EAAAA,QAAQ,EAAER,SAAS,CAACiB,IAAV,CAAeC;AADR,C","sourcesContent":["import React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport PropTypes from 'prop-types';\n\nconst ToolbarOptions = {\n  options: ['inline', 'blockType', 'list', 'textAlign', 'link', 'emoji', 'image', 'history'],\n  inline: {\n    options: ['bold', 'italic', 'underline'],\n  },\n};\n\nexport default class TextEditorTwo extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      editorState: EditorState.createEmpty(),\n    };\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\n  }\n\n  onEditorStateChange = (editorState) => {\n    const { onChange } = this.props;\n\n    this.setState({\n      editorState,\n    });\n    if (onChange) { onChange(draftToHtml(convertToRaw(editorState.getCurrentContent()))); }\n  };\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <div className=\"text-editor\">\n        <Editor\n          editorState={editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n          toolbar={ToolbarOptions}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}