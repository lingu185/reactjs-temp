{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\DropZone.jsx\";\nimport React, { PureComponent } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\n\nclass DropZoneField extends PureComponent {\n  constructor() {\n    super();\n    this.state = {};\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(file) {\n    const {\n      onChange\n    } = this.props;\n    onChange(file.map(fl => Object.assign(fl, {\n      preview: URL.createObjectURL(fl)\n    })));\n  }\n\n  removeFile(index, e) {\n    const {\n      onChange,\n      value\n    } = this.props;\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  }\n\n  render() {\n    const {\n      value,\n      customHeight,\n      name\n    } = this.props;\n    const files = value;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `dropzone dropzone--single${customHeight ? ' dropzone--custom-height' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      accept: \"image/jpeg, image/png\",\n      name: name,\n      multiple: false,\n      onDrop: fileToUpload => {\n        this.onDrop(fileToUpload);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: \"dropzone__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), (!files || files.length === 0) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone__drop-here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lnr lnr-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), \" Drop file here to upload\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })))), files && Array.isArray(files) && files.length > 0 && /*#__PURE__*/React.createElement(\"aside\", {\n      className: \"dropzone__img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: files[0].preview,\n      alt: \"drop-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropzone__img-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, files[0].name), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropzone__img-delete\",\n      type: \"button\",\n      onClick: e => this.removeFile(0, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Remove\")));\n  }\n\n}\n\nDropZoneField.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  customHeight: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string\n  }))]).isRequired\n};\nDropZoneField.defaultProps = {\n  customHeight: false\n};\n\nconst renderDropZoneField = props => {\n  const {\n    input,\n    customHeight\n  } = props;\n  return /*#__PURE__*/React.createElement(DropZoneField, Object.assign({}, input, {\n    customHeight: customHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }));\n};\n\nrenderDropZoneField.propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    onChange: PropTypes.func\n  }).isRequired,\n  customHeight: PropTypes.bool\n};\nrenderDropZoneField.defaultProps = {\n  customHeight: false\n};\nexport default renderDropZoneField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/DropZone.jsx"],"names":["React","PureComponent","Dropzone","PropTypes","DropZoneField","constructor","state","onDrop","bind","file","onChange","props","map","fl","Object","assign","preview","URL","createObjectURL","removeFile","index","e","value","preventDefault","filter","val","i","render","customHeight","name","files","fileToUpload","getRootProps","getInputProps","length","Array","isArray","propTypes","string","isRequired","func","bool","oneOfType","arrayOf","shape","defaultProps","renderDropZoneField","input"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\n\nclass DropZoneField extends PureComponent {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    customHeight: PropTypes.bool,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n      })),\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    customHeight: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {};\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(file) {\n    const { onChange } = this.props;\n    onChange(file.map(fl => Object.assign(fl, {\n      preview: URL.createObjectURL(fl),\n    })));\n  }\n\n  removeFile(index, e) {\n    const { onChange, value } = this.props;\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  }\n\n  render() {\n    const {\n      value, customHeight, name,\n    } = this.props;\n\n    const files = value;\n\n    return (\n      <div className={`dropzone dropzone--single${customHeight ? ' dropzone--custom-height' : ''}`}>\n        <Dropzone\n          accept=\"image/jpeg, image/png\"\n          name={name}\n          multiple={false}\n          onDrop={(fileToUpload) => {\n            this.onDrop(fileToUpload);\n          }}\n        >\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps()} className=\"dropzone__input\">\n              {(!files || files.length === 0)\n              && (\n              <div className=\"dropzone__drop-here\">\n                <span className=\"lnr lnr-upload\" /> Drop file here to upload\n              </div>\n              )}\n              <input {...getInputProps()} />\n            </div>\n          )}\n        </Dropzone>\n        {files && Array.isArray(files) && files.length > 0\n        && (\n        <aside className=\"dropzone__img\">\n          <img src={files[0].preview} alt=\"drop-img\" />\n          <p className=\"dropzone__img-name\">{files[0].name}</p>\n          <button className=\"dropzone__img-delete\" type=\"button\" onClick={e => this.removeFile(0, e)}>\n            Remove\n          </button>\n        </aside>\n        )}\n      </div>\n    );\n  }\n}\n\nconst renderDropZoneField = (props) => {\n  const { input, customHeight } = props;\n  return (\n    <DropZoneField\n      {...input}\n      customHeight={customHeight}\n    />\n  );\n};\n\nrenderDropZoneField.propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n  }).isRequired,\n  customHeight: PropTypes.bool,\n};\n\nrenderDropZoneField.defaultProps = {\n  customHeight: false,\n};\n\nexport default renderDropZoneField;\n"]},"metadata":{},"sourceType":"module"}