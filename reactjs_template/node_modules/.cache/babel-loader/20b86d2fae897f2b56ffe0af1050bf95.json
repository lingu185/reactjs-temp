{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Charts\\\\ReactVis\\\\components\\\\Plots.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { FlexibleWidthXYPlot, HorizontalGridLines, LineSeries, VerticalRectSeries, XAxis, YAxis } from 'react-vis';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nfunction getRandomSeriesData(total) {\n  const result = [];\n  let lastY = Math.random() * 40;\n  let y;\n  const firstY = lastY;\n\n  for (let i = 0; i < Math.max(total, 3); i += 1) {\n    y = Math.random() * firstY - firstY / 2 + lastY;\n    result.push({\n      left: i,\n      top: y\n    });\n    lastY = y;\n  }\n\n  return result;\n}\n\nclass Plots extends PureComponent {\n  constructor(props) {\n    super(props);\n    const totalValues = 30;\n    this.state = {\n      series: [{\n        title: 'Apples',\n        disabled: false,\n        data: getRandomSeriesData(totalValues)\n      }, {\n        title: 'Bananas',\n        disabled: false,\n        data: getRandomSeriesData(totalValues)\n      }]\n    };\n  }\n\n  render() {\n    const {\n      series\n    } = this.state;\n    const {\n      t,\n      dir\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 12,\n      xl: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"bold-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, t('charts.react_vis.plots'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"react-vis\",\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n      animation: true,\n      getX: d => d.left,\n      getY: d => d.top,\n      xDomain: [0, series[0].data.length - 1],\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(HorizontalGridLines, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      className: \"cool-custom-name\",\n      tickSizeInner: 0,\n      tickSizeOuter: 8,\n      orientation: dir === 'rtl' ? 'right' : 'left',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      className: \"even-cooler-custom-name\",\n      tickSizeInner: 0,\n      tickSizeOuter: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(VerticalRectSeries, Object.assign({\n      data: series[0].data.map(({\n        left,\n        top\n      }) => ({\n        x0: left,\n        left: left + 1,\n        top\n      })),\n      stroke: \"white\"\n    }, series[0].disabled ? {\n      opacity: 0.2\n    } : null, {\n      color: \"#70bbfd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(LineSeries, Object.assign({\n      className: \"react-vis__svg-line\",\n      data: series[1].data,\n      curve: \"curveMonotoneX\"\n    }, series[1].disabled ? {\n      opacity: 0.2\n    } : null, {\n      color: \"#f6da6e\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })))))));\n  }\n\n}\n\nPlots.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired\n};\nexport default withTranslation('common')(Plots);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Charts/ReactVis/components/Plots.jsx"],"names":["React","PureComponent","Card","CardBody","Col","FlexibleWidthXYPlot","HorizontalGridLines","LineSeries","VerticalRectSeries","XAxis","YAxis","withTranslation","PropTypes","getRandomSeriesData","total","result","lastY","Math","random","y","firstY","i","max","push","left","top","Plots","constructor","props","totalValues","state","series","title","disabled","data","render","t","dir","d","length","map","x0","opacity","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  VerticalRectSeries,\n  XAxis,\n  YAxis,\n} from 'react-vis';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nfunction getRandomSeriesData(total) {\n  const result = [];\n  let lastY = Math.random() * 40;\n  let y;\n  const firstY = lastY;\n  for (let i = 0; i < Math.max(total, 3); i += 1) {\n    y = ((Math.random() * firstY) - (firstY / 2)) + lastY;\n    result.push({\n      left: i,\n      top: y,\n    });\n    lastY = y;\n  }\n  return result;\n}\n\nclass Plots extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    dir: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    const totalValues = 30;\n    this.state = {\n      series: [\n        {\n          title: 'Apples',\n          disabled: false,\n          data: getRandomSeriesData(totalValues),\n        },\n        {\n          title: 'Bananas',\n          disabled: false,\n          data: getRandomSeriesData(totalValues),\n        },\n      ],\n    };\n  }\n\n  render() {\n    const { series } = this.state;\n    const { t, dir } = this.props;\n\n    return (\n      <Col md={12} lg={12} xl={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{t('charts.react_vis.plots')}</h5>\n            </div>\n            <div className=\"react-vis\" dir=\"ltr\">\n              <FlexibleWidthXYPlot\n                animation\n                getX={d => d.left}\n                getY={d => d.top}\n                xDomain={[0, series[0].data.length - 1]}\n                height={300}\n              >\n                <HorizontalGridLines />\n                <YAxis\n                  className=\"cool-custom-name\"\n                  tickSizeInner={0}\n                  tickSizeOuter={8}\n                  orientation={dir === 'rtl' ? 'right' : 'left'}\n                />\n                <XAxis\n                  className=\"even-cooler-custom-name\"\n                  tickSizeInner={0}\n                  tickSizeOuter={8}\n                />\n                <VerticalRectSeries\n                  data={series[0].data.map(({ left, top }) => ({ x0: left, left: left + 1, top }))}\n                  stroke=\"white\"\n                  {...(series[0].disabled ? { opacity: 0.2 } : null)}\n                  color=\"#70bbfd\"\n                />\n                <LineSeries\n                  className=\"react-vis__svg-line\"\n                  data={series[1].data}\n                  curve=\"curveMonotoneX\"\n                  {...(series[1].disabled ? { opacity: 0.2 } : null)}\n                  color=\"#f6da6e\"\n                />\n              </FlexibleWidthXYPlot>\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withTranslation('common')(Plots);\n"]},"metadata":{},"sourceType":"module"}