{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Dashboards\\\\Fitness\\\\components\\\\ActivityChart.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\nconst data = [{\n  name: 'Mon',\n  cycling: 6.8,\n  pv: 800,\n  walking: 2.7\n}, {\n  name: 'Tue',\n  cycling: 8.1,\n  pv: 967,\n  walking: 0\n}, {\n  name: 'Wed',\n  cycling: 3,\n  pv: 1098,\n  walking: 5.4\n}, {\n  name: 'Thu',\n  cycling: 5.5,\n  pv: 1200,\n  walking: 4.8\n}, {\n  name: 'Fri',\n  cycling: 4,\n  pv: 1108,\n  walking: 2.6\n}, {\n  name: 'Sat',\n  cycling: 7,\n  pv: 1108,\n  walking: 6\n}, {\n  name: 'Sun',\n  cycling: 8.2,\n  pv: 680,\n  walking: 4.1\n}];\n\nconst ActivityChart = ({\n  t,\n  dir,\n  themeName\n}) => /*#__PURE__*/React.createElement(Panel, {\n  xs: 12,\n  lg: 12,\n  title: t('dashboard_fitness.activity_chart'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  dir: \"ltr\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n  height: 250,\n  className: \"dashboard__area\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(AreaChart, {\n  data: data,\n  margin: {\n    top: 20,\n    left: -15,\n    bottom: 20\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(XAxis, {\n  dataKey: \"name\",\n  tickLine: false,\n  reversed: dir === 'rtl',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(YAxis, {\n  tickFormatter: value => `${value}km`,\n  tickLine: false,\n  orientation: dir === 'rtl' ? 'right' : 'left',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }\n})), /*#__PURE__*/React.createElement(Legend, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(CartesianGrid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Area, {\n  name: \"Cycling\",\n  type: \"monotone\",\n  dataKey: \"cycling\",\n  fill: \"#70bbfd\",\n  stroke: \"#70bbfd\",\n  fillOpacity: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Area, {\n  name: \"Walking\",\n  type: \"monotone\",\n  dataKey: \"walking\",\n  fill: \"#4ce1b6\",\n  stroke: \"#4ce1b6\",\n  fillOpacity: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 11\n  }\n})))));\n\nActivityChart.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(withTranslation('common')(ActivityChart));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Dashboards/Fitness/components/ActivityChart.jsx"],"names":["React","connect","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","withTranslation","PropTypes","Panel","getTooltipStyles","data","name","cycling","pv","walking","ActivityChart","t","dir","themeName","top","left","bottom","value","propTypes","func","isRequired","string","state","theme","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\n\nimport getTooltipStyles from '../../../../shared/helpers';\n\nconst data = [\n  {\n    name: 'Mon', cycling: 6.8, pv: 800, walking: 2.7,\n  },\n  {\n    name: 'Tue', cycling: 8.1, pv: 967, walking: 0,\n  },\n  {\n    name: 'Wed', cycling: 3, pv: 1098, walking: 5.4,\n  },\n  {\n    name: 'Thu', cycling: 5.5, pv: 1200, walking: 4.8,\n  },\n  {\n    name: 'Fri', cycling: 4, pv: 1108, walking: 2.6,\n  },\n  {\n    name: 'Sat', cycling: 7, pv: 1108, walking: 6,\n  },\n  {\n    name: 'Sun', cycling: 8.2, pv: 680, walking: 4.1,\n  },\n];\n\nconst ActivityChart = ({ t, dir, themeName }) => (\n  <Panel xs={12} lg={12} title={t('dashboard_fitness.activity_chart')}>\n    <div dir=\"ltr\">\n      <ResponsiveContainer height={250} className=\"dashboard__area\">\n        <AreaChart data={data} margin={{ top: 20, left: -15, bottom: 20 }}>\n          <XAxis dataKey=\"name\" tickLine={false} reversed={dir === 'rtl'} />\n          <YAxis\n            tickFormatter={value => `${value}km`}\n            tickLine={false}\n            orientation={dir === 'rtl' ? 'right' : 'left'}\n          />\n          <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n          <Legend />\n          <CartesianGrid />\n          <Area name=\"Cycling\" type=\"monotone\" dataKey=\"cycling\" fill=\"#70bbfd\" stroke=\"#70bbfd\" fillOpacity={0.2} />\n          <Area name=\"Walking\" type=\"monotone\" dataKey=\"walking\" fill=\"#4ce1b6\" stroke=\"#4ce1b6\" fillOpacity={0.2} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  </Panel>\n);\n\nActivityChart.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(ActivityChart));\n"]},"metadata":{},"sourceType":"module"}