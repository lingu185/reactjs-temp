{"ast":null,"code":"import { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ScrollToTop extends PureComponent {\n  componentDidUpdate(prevProps) {\n    const {\n      location\n    } = this.props;\n\n    if (location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return children;\n  }\n\n}\n\nScrollToTop.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }).isRequired,\n  children: PropTypes.element.isRequired\n};\nexport default withRouter(ScrollToTop);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/App/ScrollToTop.jsx"],"names":["PureComponent","withRouter","PropTypes","ScrollToTop","componentDidUpdate","prevProps","location","props","pathname","window","scrollTo","render","children","propTypes","shape","string","isRequired","element"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BH,aAA1B,CAAwC;AAQtCI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;;AACA,QAAID,QAAQ,CAACE,QAAT,KAAsBH,SAAS,CAACC,QAAV,CAAmBE,QAA7C,EAAuD;AACrDC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKL,KAA1B;AACA,WAAOK,QAAP;AACD;;AAlBqC;;AAAlCT,W,CACGU,S,GAAY;AACjBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,KAAV,CAAgB;AACxBN,IAAAA,QAAQ,EAAEN,SAAS,CAACa;AADI,GAAhB,EAEPC,UAHc;AAIjBJ,EAAAA,QAAQ,EAAEV,SAAS,CAACe,OAAV,CAAkBD;AAJX,C;AAoBrB,eAAef,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ScrollToTop extends PureComponent {\n  static propTypes = {\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n    children: PropTypes.element.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    if (location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n"]},"metadata":{},"sourceType":"module"}