{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\FileInput.jsx\";\n\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FileInputField extends PureComponent {\n  render() {\n    const {\n      onChange,\n      name,\n      value\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__form-group-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Choose the file\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, value.name), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: name,\n      id: name,\n      onChange: e => {\n        e.preventDefault(); // convert files to an array\n\n        const files = [...e.target.files];\n        onChange({\n          file: files[0],\n          name: files[0].name\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nFileInputField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.shape({\n    name: PropTypes.string\n  }), PropTypes.string])\n};\nFileInputField.defaultProps = {\n  value: null\n};\n\nconst renderFileInputField = props => {\n  const {\n    input,\n    meta\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__form-group-input-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FileInputField, Object.assign({}, input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form__form-group-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 38\n    }\n  }, meta.error));\n};\n\nrenderFileInputField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderFileInputField.defaultProps = {\n  meta: null\n};\nexport default renderFileInputField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/FileInput.jsx"],"names":["React","PureComponent","PropTypes","FileInputField","render","onChange","name","value","props","e","preventDefault","files","target","file","propTypes","func","isRequired","string","oneOfType","shape","defaultProps","renderFileInputField","input","meta","touched","error","bool"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAN,SAA6BF,aAA7B,CAA2C;AAgBzCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKC,KAAvC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,KAAK,CAACD,IAAb,CAFF,eAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,EAAE,EAAEA,IAHN;AAIE,MAAA,QAAQ,EACLG,CAAD,IAAO;AACLA,QAAAA,CAAC,CAACC,cAAF,GADK,CAEL;;AACA,cAAMC,KAAK,GAAG,CAAC,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAb,CAAd;AACAN,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAEF,KAAK,CAAC,CAAD,CAAb;AAAkBL,UAAAA,IAAI,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASL;AAAjC,SAAD,CAAR;AACD,OAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAmBD;;AAtCwC;;AAArCH,c,CACGW,S,GAAY;AACjBT,EAAAA,QAAQ,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADR;AAEjBV,EAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBD,UAFN;AAGjBT,EAAAA,KAAK,EAAEL,SAAS,CAACgB,SAAV,CAAoB,CACzBhB,SAAS,CAACiB,KAAV,CAAgB;AACdb,IAAAA,IAAI,EAAEJ,SAAS,CAACe;AADF,GAAhB,CADyB,EAIzBf,SAAS,CAACe,MAJe,CAApB;AAHU,C;AADfd,c,CAYGiB,Y,GAAe;AACpBb,EAAAA,KAAK,EAAE;AADa,C;;AA6BxB,MAAMc,oBAAoB,GAAIb,KAAD,IAAW;AACtC,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBf,KAAxB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD,oBAAoBc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,iBAA8B;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CF,IAAI,CAACE,KAA/C,CAFjC,CADF;AAMD,CARD;;AAUAJ,oBAAoB,CAACP,SAArB,GAAiC;AAC/BQ,EAAAA,KAAK,EAAEpB,SAAS,CAACiB,KAAV,CAAgB;AACrBd,IAAAA,QAAQ,EAAEH,SAAS,CAACa,IADC;AAErBT,IAAAA,IAAI,EAAEJ,SAAS,CAACe;AAFK,GAAhB,EAGJD,UAJ4B;AAK/BO,EAAAA,IAAI,EAAErB,SAAS,CAACiB,KAAV,CAAgB;AACpBK,IAAAA,OAAO,EAAEtB,SAAS,CAACwB,IADC;AAEpBD,IAAAA,KAAK,EAAEvB,SAAS,CAACe;AAFG,GAAhB;AALyB,CAAjC;AAWAI,oBAAoB,CAACD,YAArB,GAAoC;AAClCG,EAAAA,IAAI,EAAE;AAD4B,CAApC;AAIA,eAAeF,oBAAf","sourcesContent":["/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FileInputField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        name: PropTypes.string,\n      }),\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    value: null,\n  };\n\n  render() {\n    const { onChange, name, value } = this.props;\n\n    return (\n      <div className=\"form__form-group-file\">\n        <label htmlFor={name}>Choose the file</label>\n        <span>{value.name}</span>\n        <input\n          type=\"file\"\n          name={name}\n          id={name}\n          onChange={\n            (e) => {\n              e.preventDefault();\n              // convert files to an array\n              const files = [...e.target.files];\n              onChange({ file: files[0], name: files[0].name });\n            }\n          }\n        />\n      </div>\n    );\n  }\n}\n\nconst renderFileInputField = (props) => {\n  const { input, meta } = props;\n  return (\n    <div className=\"form__form-group-input-wrap\">\n      <FileInputField {...input} />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderFileInputField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n};\n\nrenderFileInputField.defaultProps = {\n  meta: null,\n};\n\nexport default renderFileInputField;\n"]},"metadata":{},"sourceType":"module"}