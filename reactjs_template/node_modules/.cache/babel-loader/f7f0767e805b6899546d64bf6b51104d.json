{"ast":null,"code":"/* eslint-disable */\nconst validate = values => {\n  const errors = {};\n\n  if (!values.Examname) {\n    errors.Examname = 'Exam Name field shouldn’t be empty';\n  }\n\n  if (!values.Name) {\n    errors.Name = 'Name field shouldn’t be empty';\n  }\n\n  if (!values.Term) {\n    errors.Term = 'Term field shouldn’t be empty';\n  }\n\n  if (!values.Standard) {\n    errors.Standard = 'Standard field shouldn’t be empty';\n  }\n\n  if (!values.Subject) {\n    errors.Subject = 'Subject field shouldn’t be empty';\n  }\n\n  if (!values.SubjectHandled) {\n    errors.SubjectHandled = 'SubjectHandled field shouldn’t be empty';\n  }\n\n  if (!values.TeachingTo) {\n    errors.TeachingTo = 'TeachingTo field shouldn’t be empty';\n  }\n\n  if (!values.Class) {\n    errors.Class = 'Class field shouldn’t be empty';\n  }\n\n  if (!values.email) {\n    errors.email = 'Email field shouldn’t be empty';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.MobileNumber) {\n    errors.MobileNumber = 'MobileNumber field shouldn’t be empty';\n  }\n\n  if (!values.url) {\n    errors.url = 'Url field shouldn’t be empty';\n  } else if (!/^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i.test(values.url)) {\n    errors.url = 'Invalid url';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password field shouldn’t be empty';\n  } else if (values.password !== 'dragon') {\n    errors.password = 'The password is incorrect';\n  }\n\n  if (!values.select) {\n    errors.select = 'Please select the option';\n  }\n\n  return errors;\n};\n\nexport default validate;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/UI/Tabs/components/validate.js"],"names":["validate","values","errors","Examname","Name","Term","Standard","Subject","SubjectHandled","TeachingTo","Class","email","test","MobileNumber","url","password","select"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAIC,MAAD,IAAY;AAC3B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AACpBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,oCAAlB;AACD;;AACD,MAAI,CAACF,MAAM,CAACG,IAAZ,EAAkB;AAChBF,IAAAA,MAAM,CAACE,IAAP,GAAc,+BAAd;AACD;;AACD,MAAI,CAACH,MAAM,CAACI,IAAZ,EAAkB;AAChBH,IAAAA,MAAM,CAACG,IAAP,GAAc,+BAAd;AACD;;AACD,MAAI,CAACJ,MAAM,CAACK,QAAZ,EAAsB;AACpBJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,mCAAlB;AACD;;AACD,MAAI,CAACL,MAAM,CAACM,OAAZ,EAAqB;AACnBL,IAAAA,MAAM,CAACK,OAAP,GAAiB,kCAAjB;AACD;;AACD,MAAI,CAACN,MAAM,CAACO,cAAZ,EAA4B;AAC1BN,IAAAA,MAAM,CAACM,cAAP,GAAwB,yCAAxB;AACD;;AACD,MAAI,CAACP,MAAM,CAACQ,UAAZ,EAAwB;AACtBP,IAAAA,MAAM,CAACO,UAAP,GAAoB,qCAApB;AACD;;AACD,MAAI,CAACR,MAAM,CAACS,KAAZ,EAAmB;AACjBR,IAAAA,MAAM,CAACQ,KAAP,GAAe,gCAAf;AACD;;AACD,MAAI,CAACT,MAAM,CAACU,KAAZ,EAAmB;AACjBT,IAAAA,MAAM,CAACS,KAAP,GAAe,gCAAf;AACD,GAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDX,MAAM,CAACU,KAAxD,CAAL,EAAqE;AAC1ET,IAAAA,MAAM,CAACS,KAAP,GAAe,uBAAf;AACD;;AACD,MAAI,CAACV,MAAM,CAACY,YAAZ,EAA0B;AACxBX,IAAAA,MAAM,CAACW,YAAP,GAAsB,uCAAtB;AACD;;AACD,MAAI,CAACZ,MAAM,CAACa,GAAZ,EAAiB;AACfZ,IAAAA,MAAM,CAACY,GAAP,GAAa,8BAAb;AACD,GAFD,MAEO,IAAI,CAAC,wJACTF,IADS,CACJX,MAAM,CAACa,GADH,CAAL,EACc;AACnBZ,IAAAA,MAAM,CAACY,GAAP,GAAa,aAAb;AACD;;AACD,MAAI,CAACb,MAAM,CAACc,QAAZ,EAAsB;AACpBb,IAAAA,MAAM,CAACa,QAAP,GAAkB,mCAAlB;AACD,GAFD,MAEO,IAAId,MAAM,CAACc,QAAP,KAAoB,QAAxB,EAAkC;AACvCb,IAAAA,MAAM,CAACa,QAAP,GAAkB,2BAAlB;AACD;;AACD,MAAI,CAACd,MAAM,CAACe,MAAZ,EAAoB;AAClBd,IAAAA,MAAM,CAACc,MAAP,GAAgB,0BAAhB;AACD;;AAED,SAAOd,MAAP;AACD,CAlDD;;AAoDA,eAAeF,QAAf","sourcesContent":["/* eslint-disable */\nconst validate = (values) => {\n  const errors = {};\n  if (!values.Examname) {\n    errors.Examname = 'Exam Name field shouldn’t be empty';\n  }\n  if (!values.Name) {\n    errors.Name = 'Name field shouldn’t be empty';\n  }\n  if (!values.Term) {\n    errors.Term = 'Term field shouldn’t be empty';\n  }\n  if (!values.Standard) {\n    errors.Standard = 'Standard field shouldn’t be empty';\n  }\n  if (!values.Subject) {\n    errors.Subject = 'Subject field shouldn’t be empty';\n  }\n  if (!values.SubjectHandled) {\n    errors.SubjectHandled = 'SubjectHandled field shouldn’t be empty';\n  }\n  if (!values.TeachingTo) {\n    errors.TeachingTo = 'TeachingTo field shouldn’t be empty';\n  }\n  if (!values.Class) {\n    errors.Class = 'Class field shouldn’t be empty';\n  }\n  if (!values.email) {\n    errors.email = 'Email field shouldn’t be empty';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n  if (!values.MobileNumber) {\n    errors.MobileNumber = 'MobileNumber field shouldn’t be empty';\n  }\n  if (!values.url) {\n    errors.url = 'Url field shouldn’t be empty';\n  } else if (!/^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i\n    .test(values.url)) {\n    errors.url = 'Invalid url';\n  }\n  if (!values.password) {\n    errors.password = 'Password field shouldn’t be empty';\n  } else if (values.password !== 'dragon') {\n    errors.password = 'The password is incorrect';\n  }\n  if (!values.select) {\n    errors.select = 'Please select the option';\n  }\n\n  return errors;\n};\n\nexport default validate;\n"]},"metadata":{},"sourceType":"module"}