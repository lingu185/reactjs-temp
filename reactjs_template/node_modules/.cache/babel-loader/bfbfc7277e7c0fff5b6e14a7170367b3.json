{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\UI\\\\Notification\\\\index.jsx\";\n\n/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport NotificationSystem from 'rc-notification';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport BasicNotifications from './components/BasicNotifications';\nimport ImageNotifications from './components/ImageNotifications';\nimport ColorStates from './components/ColorStates';\nimport ColorStatesFullWidth from './components/ColorStatesFullWidth';\nimport { RTLProps } from '../../../shared/prop-types/ReducerProps';\nlet notificationLU = null;\nlet notificationRU = null;\nlet notificationTC = null;\n\nconst showNotification = ({\n  notification,\n  position\n}, rtl) => {\n  switch (position) {\n    case 'left-up':\n      notificationLU.notice({\n        content: notification,\n        duration: 5,\n        closable: true,\n        style: {\n          top: 0,\n          left: 0\n        },\n        className: `${position} ${rtl}-support`\n      });\n      break;\n\n    case 'right-up':\n      notificationRU.notice({\n        content: notification,\n        duration: 5,\n        closable: true,\n        style: {\n          top: 0,\n          left: 'calc(100vw - 100%)'\n        },\n        className: `${position} ${rtl}-support`\n      });\n      break;\n\n    default:\n      notificationTC.notice({\n        content: notification,\n        duration: 5,\n        closable: true,\n        style: {\n          top: 0,\n          left: 0\n        },\n        className: `${position} ${rtl}-support`\n      });\n      break;\n  }\n};\n\nclass Notifications extends PureComponent {\n  componentDidMount() {\n    NotificationSystem.newInstance({\n      style: {\n        top: 65\n      }\n    }, n => notificationLU = n);\n    NotificationSystem.newInstance({\n      style: {\n        top: 65\n      }\n    }, n => notificationRU = n);\n    NotificationSystem.newInstance({\n      style: {\n        top: 65\n      }\n    }, n => notificationTC = n);\n  }\n\n  componentWillUnmount() {\n    notificationLU.destroy();\n    notificationRU.destroy();\n    notificationTC.destroy();\n  }\n\n  render() {\n    const {\n      t,\n      rtl\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, t('ui_elements.notifications.title')), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"page-subhead subhead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Use this elements, if you want to show some hints or additional information\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BasicNotifications, {\n      showNotification: ({\n        notification,\n        position\n      }) => showNotification({\n        notification,\n        position\n      }, rtl.direction),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ImageNotifications, {\n      showNotification: ({\n        notification,\n        position\n      }) => showNotification({\n        notification,\n        position\n      }, rtl.direction),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ColorStates, {\n      showNotification: ({\n        notification,\n        position\n      }) => showNotification({\n        notification,\n        position\n      }, rtl.direction),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ColorStatesFullWidth, {\n      showNotification: ({\n        notification,\n        position\n      }) => showNotification({\n        notification,\n        position\n      }, rtl.direction),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nNotifications.propTypes = {\n  t: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired\n};\nexport default compose(withTranslation('common'), connect(state => ({\n  rtl: state.rtl\n})))(Notifications);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/UI/Notification/index.jsx"],"names":["React","PureComponent","Col","Container","Row","NotificationSystem","withTranslation","connect","compose","PropTypes","BasicNotifications","ImageNotifications","ColorStates","ColorStatesFullWidth","RTLProps","notificationLU","notificationRU","notificationTC","showNotification","notification","position","rtl","notice","content","duration","closable","style","top","left","className","Notifications","componentDidMount","newInstance","n","componentWillUnmount","destroy","render","t","props","direction","propTypes","func","isRequired","state"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport NotificationSystem from 'rc-notification';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport BasicNotifications from './components/BasicNotifications';\nimport ImageNotifications from './components/ImageNotifications';\nimport ColorStates from './components/ColorStates';\nimport ColorStatesFullWidth from './components/ColorStatesFullWidth';\nimport { RTLProps } from '../../../shared/prop-types/ReducerProps';\n\nlet notificationLU = null;\nlet notificationRU = null;\nlet notificationTC = null;\n\nconst showNotification = ({ notification, position }, rtl) => {\n  switch (position) {\n    case 'left-up':\n      notificationLU.notice({\n        content: notification,\n        duration: 5,\n        closable: true,\n        style: { top: 0, left: 0 },\n        className: `${position} ${rtl}-support`,\n      });\n      break;\n    case 'right-up':\n      notificationRU.notice({\n        content: notification,\n        duration: 5,\n        closable: true,\n        style: { top: 0, left: 'calc(100vw - 100%)' },\n        className: `${position} ${rtl}-support`,\n      });\n      break;\n    default:\n      notificationTC.notice({\n        content: notification,\n        duration: 5,\n        closable: true,\n        style: { top: 0, left: 0 },\n        className: `${position} ${rtl}-support`,\n      });\n      break;\n  }\n};\n\nclass Notifications extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    rtl: RTLProps.isRequired,\n  };\n\n  componentDidMount() {\n    NotificationSystem.newInstance({ style: { top: 65 } }, n => notificationLU = n);\n    NotificationSystem.newInstance({ style: { top: 65 } }, n => notificationRU = n);\n    NotificationSystem.newInstance({ style: { top: 65 } }, n => notificationTC = n);\n  }\n\n  componentWillUnmount() {\n    notificationLU.destroy();\n    notificationRU.destroy();\n    notificationTC.destroy();\n  }\n\n  render() {\n    const { t, rtl } = this.props;\n\n    return (\n      <Container>\n        <Row>\n          <Col md={12}>\n            <h3 className=\"page-title\">{t('ui_elements.notifications.title')}</h3>\n            <h3 className=\"page-subhead subhead\">Use this elements, if you want to show some hints or additional\n              information\n            </h3>\n          </Col>\n        </Row>\n        <Row>\n          <BasicNotifications\n            showNotification={\n              ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n            }\n          />\n          <ImageNotifications\n            showNotification={\n              ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n            }\n          />\n          <ColorStates\n            showNotification={\n              ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n            }\n          />\n          <ColorStatesFullWidth\n            showNotification={\n              ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n            }\n          />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default compose(withTranslation('common'), connect(state => ({\n  rtl: state.rtl,\n})))(Notifications);\n"]},"metadata":{},"sourceType":"module"}