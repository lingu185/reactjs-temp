{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\ECommerce\\\\ProductsList\\\\components\\\\ProductsListTable.jsx\";\n\n/* eslint-disable react/no-unused-state */\nimport React, { PureComponent } from 'react';\nimport { ButtonToolbar, Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport MagnifyIcon from 'mdi-react/MagnifyIcon';\nimport EditTable from '../../../../shared/components/table/EditableTable';\nconst Img1 = `${process.env.PUBLIC_URL}/img/for_store/vase.png`;\nconst Img2 = `${process.env.PUBLIC_URL}/img/for_store/vase_2.png`;\nconst Img3 = `${process.env.PUBLIC_URL}/img/for_store/vase_3.png`;\nconst Img4 = `${process.env.PUBLIC_URL}/img/for_store/fur.png`;\nconst Img5 = `${process.env.PUBLIC_URL}/img/for_store/pillow.png`;\nconst Img6 = `${process.env.PUBLIC_URL}/img/for_store/pillow_2.png`;\nconst Img7 = `${process.env.PUBLIC_URL}/img/for_store/pillow_dog.png`;\n\nconst PhotoFormatter = ({\n  value\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"products-list__img-wrap\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: value,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}));\n\nPhotoFormatter.propTypes = {\n  value: PropTypes.string.isRequired\n};\n\nconst StatusFormatter = ({\n  value\n}) => value === 'Enabled' ? /*#__PURE__*/React.createElement(\"span\", {\n  className: \"badge badge-success\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }\n}, \"Enabled\") : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"badge badge-disabled\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}, \"Disabled\");\n\nStatusFormatter.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport default class ProductsListTable extends PureComponent {\n  constructor() {\n    super();\n\n    this.onChangePage = pageOfItems => {\n      // update state with new page of items\n      this.setState({\n        pageOfItems\n      });\n    };\n\n    this.getRandomDate = (start, end) => new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n\n    this.createRows = numberOfRows => {\n      const rows = [];\n\n      for (let i = 1; i < numberOfRows + 1; i += 1) {\n        rows.push({\n          id: Math.min(99999, Math.round(Math.random() * 99999 + 1000)),\n          photo: [Img1, Img2, Img3, Img4, Img5, Img6, Img7][Math.floor(Math.random() * 7)],\n          name: ['Glass Vase', 'Pillow'][Math.floor(Math.random() * 2)],\n          category: 'Home accessories',\n          quantity: Math.min(400, Math.round(Math.random() * 400)),\n          articul: `art${Math.min(99999, Math.round(Math.random() * 99999 + 1))}`,\n          price: Math.min(1000, Math.random() * 1000 + 20).toFixed(2),\n          status: ['Enabled', 'Disabled'][Math.floor(Math.random() * 2)]\n        });\n      }\n\n      return rows;\n    };\n\n    this.heads = [{\n      key: 'id',\n      name: 'ID',\n      width: 80,\n      sortable: true\n    }, {\n      key: 'photo',\n      name: 'Photo',\n      formatter: PhotoFormatter\n    }, {\n      key: 'name',\n      name: 'Name',\n      sortable: true\n    }, {\n      key: 'category',\n      name: 'Category',\n      sortable: true\n    }, {\n      key: 'quantity',\n      name: 'Quantity',\n      sortable: true\n    }, {\n      key: 'articul',\n      name: 'Articul',\n      sortable: true\n    }, {\n      key: 'price',\n      name: 'Price, $',\n      sortable: true\n    }, {\n      key: 'status',\n      name: 'Status',\n      sortable: true,\n      formatter: StatusFormatter,\n      width: 110\n    }];\n    this.state = {\n      rows: this.createRows(17),\n      pageOfItems: []\n    };\n  }\n\n  render() {\n    const {\n      rows\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"products-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"bold-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Products List\"), /*#__PURE__*/React.createElement(ButtonToolbar, {\n      className: \"products-list__btn-toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__form-group products-list__search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Search...\",\n      name: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MagnifyIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-primary products-list__btn-add\",\n      to: \"/e-commerce/product_edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Add new product\"))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"typography-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Show\", /*#__PURE__*/React.createElement(\"select\", {\n      className: \"select-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"20\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"30\")), \"entries\"), /*#__PURE__*/React.createElement(EditTable, {\n      heads: this.heads,\n      rows: rows,\n      enableRowSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/ECommerce/ProductsList/components/ProductsListTable.jsx"],"names":["React","PureComponent","ButtonToolbar","Card","CardBody","Col","PropTypes","Link","MagnifyIcon","EditTable","Img1","process","env","PUBLIC_URL","Img2","Img3","Img4","Img5","Img6","Img7","PhotoFormatter","value","propTypes","string","isRequired","StatusFormatter","ProductsListTable","constructor","onChangePage","pageOfItems","setState","getRandomDate","start","end","Date","getTime","Math","random","toLocaleDateString","createRows","numberOfRows","rows","i","push","id","min","round","photo","floor","name","category","quantity","articul","price","toFixed","status","heads","key","width","sortable","formatter","state","render"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React, { PureComponent } from 'react';\nimport {\n  ButtonToolbar, Card, CardBody, Col,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport MagnifyIcon from 'mdi-react/MagnifyIcon';\nimport EditTable from '../../../../shared/components/table/EditableTable';\n\n\nconst Img1 = `${process.env.PUBLIC_URL}/img/for_store/vase.png`;\nconst Img2 = `${process.env.PUBLIC_URL}/img/for_store/vase_2.png`;\nconst Img3 = `${process.env.PUBLIC_URL}/img/for_store/vase_3.png`;\nconst Img4 = `${process.env.PUBLIC_URL}/img/for_store/fur.png`;\nconst Img5 = `${process.env.PUBLIC_URL}/img/for_store/pillow.png`;\nconst Img6 = `${process.env.PUBLIC_URL}/img/for_store/pillow_2.png`;\nconst Img7 = `${process.env.PUBLIC_URL}/img/for_store/pillow_dog.png`;\n\nconst PhotoFormatter = ({ value }) => (\n  <div className=\"products-list__img-wrap\">\n    <img src={value} alt=\"\" />\n  </div>\n);\n\nPhotoFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nconst StatusFormatter = ({ value }) => (\n  value === 'Enabled' ? <span className=\"badge badge-success\">Enabled</span>\n    : <span className=\"badge badge-disabled\">Disabled</span>\n);\n\nStatusFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default class ProductsListTable extends PureComponent {\n  constructor() {\n    super();\n    this.heads = [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 80,\n        sortable: true,\n      },\n      {\n        key: 'photo',\n        name: 'Photo',\n        formatter: PhotoFormatter,\n      },\n      {\n        key: 'name',\n        name: 'Name',\n        sortable: true,\n      },\n      {\n        key: 'category',\n        name: 'Category',\n        sortable: true,\n      },\n      {\n        key: 'quantity',\n        name: 'Quantity',\n        sortable: true,\n      },\n      {\n        key: 'articul',\n        name: 'Articul',\n        sortable: true,\n      },\n      {\n        key: 'price',\n        name: 'Price, $',\n        sortable: true,\n      },\n      {\n        key: 'status',\n        name: 'Status',\n        sortable: true,\n        formatter: StatusFormatter,\n        width: 110,\n      },\n    ];\n\n    this.state = {\n      rows: this.createRows(17),\n      pageOfItems: [],\n    };\n  }\n\n  onChangePage = (pageOfItems) => {\n    // update state with new page of items\n    this.setState({ pageOfItems });\n  };\n\n  getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  createRows = (numberOfRows) => {\n    const rows = [];\n\n    for (let i = 1; i < numberOfRows + 1; i += 1) {\n      rows.push({\n        id: Math.min(99999, Math.round((Math.random() * 99999) + 1000)),\n        photo: [Img1, Img2, Img3, Img4, Img5, Img6, Img7][Math.floor((Math.random() * 7))],\n        name: ['Glass Vase', 'Pillow'][Math.floor((Math.random() * 2))],\n        category: 'Home accessories',\n        quantity: Math.min(400, Math.round(Math.random() * 400)),\n        articul: `art${Math.min(99999, Math.round((Math.random() * 99999) + 1))}`,\n        price: Math.min(1000, (Math.random() * 1000) + 20).toFixed(2),\n        status: ['Enabled', 'Disabled'][Math.floor((Math.random() * 2))],\n      });\n    }\n    return rows;\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody className=\"products-list\">\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">Products List</h5>\n              <ButtonToolbar className=\"products-list__btn-toolbar-top\">\n                <form className=\"form\">\n                  <div className=\"form__form-group products-list__search\">\n                    <input placeholder=\"Search...\" name=\"search\" />\n                    <MagnifyIcon />\n                  </div>\n                </form>\n                <Link className=\"btn btn-primary products-list__btn-add\" to=\"/e-commerce/product_edit\">Add new\n                  product\n                </Link>\n              </ButtonToolbar>\n            </div>\n            <p className=\"typography-message\">Show\n              <select className=\"select-options\">\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n                <option value=\"30\">30</option>\n              </select>\n              entries\n            </p>\n            <EditTable heads={this.heads} rows={rows} enableRowSelect />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}