{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\pagination\\\\Pagination.jsx\";\nimport React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport range from 'lodash.range';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\nexport default class CustPag extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setPage = page => {\n      const {\n        itemsCount,\n        itemsToShow,\n        onChangePage\n      } = this.props; // calculate total pages\n\n      const totalPages = Math.ceil(itemsCount / itemsToShow);\n\n      if (page < 1 || page > totalPages) {\n        return;\n      } // call change page function in parent component\n\n\n      onChangePage(page);\n    };\n\n    this.getPager = (totalItems, curPage, pSize) => {\n      // default to first page\n      const currentPage = curPage || 1; // default page size is 10\n\n      const pageSize = pSize || 10; // calculate total pages\n\n      const totalPages = Math.ceil(totalItems / pageSize);\n      let startPage;\n      let endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else if (currentPage <= 6) {\n        // more than 10 total pages so calculate start and end pages\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      } // calculate start and end item indexes\n\n\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      const pages = range(startPage, endPage + 1); // return object with all pager properties required by the view\n\n      return {\n        totalItems,\n        currentPage,\n        pageSize,\n        totalPages,\n        startPage,\n        endPage,\n        startIndex,\n        endIndex,\n        pages\n      };\n    };\n  }\n\n  render() {\n    const {\n      itemsCount,\n      itemsToShow,\n      pageOfItems\n    } = this.props;\n    const pages = [];\n\n    for (let i = 1; i <= Math.ceil(itemsCount / itemsToShow); i += 1) {\n      pages.push(i);\n    }\n\n    return itemsCount ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, itemsCount <= 1 ? '' : /*#__PURE__*/React.createElement(Pagination, {\n      className: \"pagination\",\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PaginationItem, {\n      className: \"pagination__item\",\n      disabled: pageOfItems === 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      className: \"pagination__link pagination__link--arrow\",\n      type: \"button\",\n      onClick: () => this.setPage(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      className: \"pagination__link-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }))), pages.map(page => /*#__PURE__*/React.createElement(PaginationItem, {\n      className: \"pagination__item\",\n      key: page,\n      active: pageOfItems === page,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      className: \"pagination__link\",\n      type: \"button\",\n      onClick: () => this.setPage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, page))), /*#__PURE__*/React.createElement(PaginationItem, {\n      className: \"pagination__item\",\n      disabled: pageOfItems === pages.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      className: \"pagination__link pagination__link--arrow\",\n      type: \"button\",\n      onClick: () => this.setPage(pages.length),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      className: \"pagination__link-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"Showing \", `${itemsToShow * (pageOfItems - 1) + 1} `, \"to \", itemsToShow * pageOfItems > itemsCount ? itemsCount : itemsToShow * pageOfItems, \" of \", itemsCount))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n/* eslint-enable */\n\nCustPag.propTypes = {\n  onChangePage: PropTypes.func.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  pageOfItems: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/pagination/Pagination.jsx"],"names":["React","Pagination","PaginationItem","PaginationLink","PropTypes","range","ChevronRightIcon","ChevronLeftIcon","CustPag","Component","setPage","page","itemsCount","itemsToShow","onChangePage","props","totalPages","Math","ceil","getPager","totalItems","curPage","pSize","currentPage","pageSize","startPage","endPage","startIndex","endIndex","min","pages","render","pageOfItems","i","push","map","length","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport range from 'lodash.range';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\n\nexport default class CustPag extends React.Component {\n  static propTypes = {\n    onChangePage: PropTypes.func.isRequired,\n    itemsCount: PropTypes.number.isRequired,\n    itemsToShow: PropTypes.number.isRequired,\n    pageOfItems: PropTypes.number.isRequired,\n  };\n\n  setPage = (page) => {\n    const { itemsCount, itemsToShow, onChangePage } = this.props;\n\n    // calculate total pages\n    const totalPages = Math.ceil(itemsCount / itemsToShow);\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // call change page function in parent component\n    onChangePage(page);\n  };\n\n  getPager = (totalItems, curPage, pSize) => {\n    // default to first page\n    const currentPage = curPage || 1;\n\n    // default page size is 10\n    const pageSize = pSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage;\n    let endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else if (currentPage <= 6) {\n      // more than 10 total pages so calculate start and end pages\n      startPage = 1;\n      endPage = 10;\n    } else if (currentPage + 4 >= totalPages) {\n      startPage = totalPages - 9;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - 5;\n      endPage = currentPage + 4;\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min((startIndex + pageSize) - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = range(startPage, endPage + 1);\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems,\n      currentPage,\n      pageSize,\n      totalPages,\n      startPage,\n      endPage,\n      startIndex,\n      endIndex,\n      pages,\n    };\n  };\n\n  render() {\n    const { itemsCount, itemsToShow, pageOfItems } = this.props;\n\n    const pages = [];\n    for (let i = 1; i <= Math.ceil(itemsCount / itemsToShow); i += 1) {\n      pages.push(i);\n    }\n\n    return itemsCount ? (\n      <div className=\"pagination__wrap\">\n        {(itemsCount <= 1) ? ''\n          : (\n            <Pagination className=\"pagination\" dir=\"ltr\">\n              <PaginationItem className=\"pagination__item\" disabled={pageOfItems === 1}>\n                <PaginationLink\n                  className=\"pagination__link pagination__link--arrow\"\n                  type=\"button\"\n                  onClick={() => this.setPage(1)}\n                >\n                  <ChevronLeftIcon className=\"pagination__link-icon\" />\n                </PaginationLink>\n              </PaginationItem>\n              {pages.map(page => (\n                <PaginationItem\n                  className=\"pagination__item\"\n                  key={page}\n                  active={pageOfItems === page}\n                >\n                  <PaginationLink\n                    className=\"pagination__link\"\n                    type=\"button\"\n                    onClick={() => this.setPage(page)}\n                  >\n                    {page}\n                  </PaginationLink>\n                </PaginationItem>\n              ))\n          }\n              <PaginationItem className=\"pagination__item\" disabled={pageOfItems === pages.length}>\n                <PaginationLink\n                  className=\"pagination__link pagination__link--arrow\"\n                  type=\"button\"\n                  onClick={() => this.setPage(pages.length)}\n                >\n                  <ChevronRightIcon className=\"pagination__link-icon\" />\n                </PaginationLink>\n              </PaginationItem>\n            </Pagination>\n          )\n          }\n        <div className=\"pagination-info\">\n          <span>Showing {`${(itemsToShow * (pageOfItems - 1)) + 1} `}\n            to {itemsToShow * pageOfItems > itemsCount ? itemsCount\n            : itemsToShow * pageOfItems} of {itemsCount}\n          </span>\n        </div>\n      </div>\n    ) : <div />;\n  }\n}\n\n/* eslint-enable */\n"]},"metadata":{},"sourceType":"module"}