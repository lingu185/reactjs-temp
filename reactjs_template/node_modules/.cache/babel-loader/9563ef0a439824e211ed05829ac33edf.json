{"ast":null,"code":"const ligthTheme = {\n  backgroundColor: 'white',\n  color: '#646777'\n};\nconst darkTheme = {\n  backgroundColor: '#2e2c34',\n  color: '#dddddd'\n};\nexport const themes = {\n  ligthTheme,\n  darkTheme\n};\n\nfunction getTooltipStyles(themeName, type) {\n  switch (themeName) {\n    case 'theme-dark':\n      {\n        const {\n          backgroundColor,\n          color\n        } = darkTheme;\n        return {\n          contentStyle: {\n            backgroundColor\n          },\n          itemStyle: type === 'defaultItems' ? null : {\n            color\n          }\n        };\n      }\n\n    case 'theme-light':\n      {\n        return ligthTheme;\n      }\n\n    default:\n      return ligthTheme;\n  }\n}\n\nexport default getTooltipStyles;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/helpers/index.js"],"names":["ligthTheme","backgroundColor","color","darkTheme","themes","getTooltipStyles","themeName","type","contentStyle","itemStyle"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,eAAe,EAAE,OADA;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAAnB;AAKA,MAAMC,SAAS,GAAG;AAChBF,EAAAA,eAAe,EAAE,SADD;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;AAKA,OAAO,MAAME,MAAM,GAAG;AACpBJ,EAAAA,UADoB;AAEpBG,EAAAA;AAFoB,CAAf;;AAKP,SAASE,gBAAT,CAA0BC,SAA1B,EAAqCC,IAArC,EAA2C;AACzC,UAAQD,SAAR;AACE,SAAK,YAAL;AAAmB;AACjB,cAAM;AAAEL,UAAAA,eAAF;AAAmBC,UAAAA;AAAnB,YAA6BC,SAAnC;AACA,eAAO;AACLK,UAAAA,YAAY,EAAE;AAAEP,YAAAA;AAAF,WADT;AAELQ,UAAAA,SAAS,EAAEF,IAAI,KAAK,cAAT,GAA0B,IAA1B,GAAiC;AAAEL,YAAAA;AAAF;AAFvC,SAAP;AAID;;AACD,SAAK,aAAL;AAAoB;AAClB,eAAOF,UAAP;AACD;;AACD;AAAS,aAAOA,UAAP;AAXX;AAaD;;AAED,eAAeK,gBAAf","sourcesContent":["const ligthTheme = {\n  backgroundColor: 'white',\n  color: '#646777',\n};\n\nconst darkTheme = {\n  backgroundColor: '#2e2c34',\n  color: '#dddddd',\n};\n\nexport const themes = {\n  ligthTheme,\n  darkTheme,\n};\n\nfunction getTooltipStyles(themeName, type) {\n  switch (themeName) {\n    case 'theme-dark': {\n      const { backgroundColor, color } = darkTheme;\n      return {\n        contentStyle: { backgroundColor },\n        itemStyle: type === 'defaultItems' ? null : { color },\n      };\n    }\n    case 'theme-light': {\n      return ligthTheme;\n    }\n    default: return ligthTheme;\n  }\n}\n\nexport default getTooltipStyles;\n"]},"metadata":{},"sourceType":"module"}