{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\Calendar.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport moment from 'moment';\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\nexport default class CalendarComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.moveEvent = ({\n      event,\n      start,\n      end\n    }) => {\n      const {\n        events\n      } = this.state;\n      const idx = events.indexOf(event);\n      const updatedEvent = { ...event,\n        start,\n        end\n      };\n      const nextEvents = [...events];\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.setState({\n        events: nextEvents\n      });\n    };\n\n    this.eventStyleGetter = event => {\n      let color;\n\n      switch (event.priority) {\n        case 'high':\n          color = '#fa697d';\n          break;\n\n        case 'family':\n          color = '#4ce1b6';\n          break;\n\n        case 'non':\n          color = '#70bbfd';\n          break;\n\n        default:\n          color = '$color-additional';\n          break;\n      }\n\n      const style = {\n        backgroundColor: color,\n        border: 'none'\n      };\n      return {\n        style\n      };\n    };\n\n    this.state = {\n      events: props.events\n    };\n  }\n\n  render() {\n    const {\n      small,\n      events,\n      dir\n    } = this.props;\n    const formats = {\n      dayFormat: (date, culture) => localizer.format(date, 'DD', culture)\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `calendar${small ? ' calendar--small' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragAndDropCalendar, {\n      rtl: dir === 'rtl',\n      localizer: localizer,\n      events: events,\n      views: ['month', 'week', 'day'],\n      popup: true,\n      formats: formats,\n      step: 60,\n      timeslots: 1,\n      showMultiDayTimes: true,\n      onEventDrop: this.moveEvent,\n      defaultDate: new Date(2018, 3, 1),\n      eventPropGetter: this.eventStyleGetter,\n      messages: {\n        previous: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-chevron-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }\n        }),\n        next: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-chevron-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }\n        }),\n        today: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lnr lnr-calendar-full\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nCalendarComponent.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    allDay: PropTypes.bool,\n    start: PropTypes.instanceOf(Date),\n    end: PropTypes.instanceOf(Date),\n    priority: PropTypes.string\n  })).isRequired,\n  small: PropTypes.bool,\n  dir: PropTypes.string.isRequired\n};\nCalendarComponent.defaultProps = {\n  small: false\n};","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/Calendar.jsx"],"names":["React","PureComponent","PropTypes","Calendar","momentLocalizer","withDragAndDrop","moment","localizer","DragAndDropCalendar","CalendarComponent","constructor","props","moveEvent","event","start","end","events","state","idx","indexOf","updatedEvent","nextEvents","splice","setState","eventStyleGetter","color","priority","style","backgroundColor","border","render","small","dir","formats","dayFormat","date","culture","format","Date","previous","next","today","propTypes","arrayOf","shape","id","number","title","string","allDay","bool","instanceOf","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\n\nimport moment from 'moment';\n\nconst localizer = momentLocalizer(moment);\n\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nexport default class CalendarComponent extends PureComponent {\n  static propTypes = {\n    events: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      allDay: PropTypes.bool,\n      start: PropTypes.instanceOf(Date),\n      end: PropTypes.instanceOf(Date),\n      priority: PropTypes.string,\n    })).isRequired,\n    small: PropTypes.bool,\n    dir: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    small: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: props.events,\n    };\n  }\n\n  moveEvent = ({ event, start, end }) => {\n    const { events } = this.state;\n\n    const idx = events.indexOf(event);\n    const updatedEvent = { ...event, start, end };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    this.setState({\n      events: nextEvents,\n    });\n  };\n\n  eventStyleGetter = (event) => {\n    let color;\n\n    switch (event.priority) {\n      case 'high':\n        color = '#fa697d';\n        break;\n\n      case 'family':\n        color = '#4ce1b6';\n        break;\n\n      case 'non':\n        color = '#70bbfd';\n        break;\n      default:\n        color = '$color-additional';\n        break;\n    }\n\n    const style = {\n      backgroundColor: color,\n      border: 'none',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  render() {\n    const { small, events, dir } = this.props;\n    const formats = {\n      dayFormat: (date, culture) => localizer.format(date, 'DD', culture),\n    };\n    return (\n      <div className={`calendar${small ? ' calendar--small' : ''}`}>\n        <DragAndDropCalendar\n          rtl={dir === 'rtl'}\n          localizer={localizer}\n          events={events}\n          views={['month', 'week', 'day']}\n          popup\n          formats={formats}\n          step={60}\n          timeslots={1}\n          showMultiDayTimes\n          onEventDrop={this.moveEvent}\n          defaultDate={new Date(2018, 3, 1)}\n          eventPropGetter={(this.eventStyleGetter)}\n          messages={{\n            previous: <span className=\"lnr lnr-chevron-left\" />,\n            next: <span className=\"lnr lnr-chevron-right\" />,\n            today: <span className=\"lnr lnr-calendar-full\" />,\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}