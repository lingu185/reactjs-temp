{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\ToggleButton.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ToggleButtonField extends PureComponent {\n  componentDidMount() {\n    const {\n      onChange,\n      defaultChecked\n    } = this.props;\n    onChange(defaultChecked);\n  }\n\n  render() {\n    const {\n      name,\n      disabled,\n      value,\n      onChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"toggle-btn__input\",\n      type: \"checkbox\",\n      name: name,\n      onChange: onChange,\n      checked: value,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"toggle-btn__input-label\",\n      onClick: () => onChange(!value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Toggle\"));\n  }\n\n}\n\nToggleButtonField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired\n};\nToggleButtonField.defaultProps = {\n  defaultChecked: false,\n  disabled: false\n};\n\nconst renderToggleButtonField = props => {\n  const {\n    input,\n    defaultChecked,\n    disabled\n  } = props;\n  return /*#__PURE__*/React.createElement(ToggleButtonField, Object.assign({}, input, {\n    defaultChecked: defaultChecked,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n};\n\nrenderToggleButtonField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nrenderToggleButtonField.defaultProps = {\n  defaultChecked: false,\n  disabled: false\n};\nexport default renderToggleButtonField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/ToggleButton.jsx"],"names":["React","PureComponent","PropTypes","ToggleButtonField","componentDidMount","onChange","defaultChecked","props","render","name","disabled","value","propTypes","func","isRequired","string","bool","oneOfType","defaultProps","renderToggleButtonField","input","shape"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,iBAAN,SAAgCF,aAAhC,CAA8C;AAiB5CG,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA+B,KAAKC,KAA1C;AACAF,IAAAA,QAAQ,CAACC,cAAD,CAAR;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AACEC,MAAAA,QADF;AACYC,MAAAA,KADZ;AACmBN,MAAAA;AADnB,QAEF,KAAKE,KAFT;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,QAAQ,EAAEJ,QAJZ;AAKE,MAAA,OAAO,EAAEM,KALX;AAME,MAAA,QAAQ,EAAED,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAGE,MAAA,OAAO,EAAE,MAAML,QAAQ,CAAC,CAACM,KAAF,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF;AAkBD;;AA7C2C;;AAAxCR,iB,CACGS,S,GAAY;AACjBP,EAAAA,QAAQ,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADR;AAEjBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBD,UAFN;AAGjBR,EAAAA,cAAc,EAAEJ,SAAS,CAACc,IAHT;AAIjBN,EAAAA,QAAQ,EAAER,SAAS,CAACc,IAJH;AAKjBL,EAAAA,KAAK,EAAET,SAAS,CAACe,SAAV,CAAoB,CACzBf,SAAS,CAACa,MADe,EAEzBb,SAAS,CAACc,IAFe,CAApB,EAGJF;AARc,C;AADfX,iB,CAYGe,Y,GAAe;AACpBZ,EAAAA,cAAc,EAAE,KADI;AAEpBI,EAAAA,QAAQ,EAAE;AAFU,C;;AAoCxB,MAAMS,uBAAuB,GAAIZ,KAAD,IAAW;AACzC,QAAM;AAAEa,IAAAA,KAAF;AAASd,IAAAA,cAAT;AAAyBI,IAAAA;AAAzB,MAAsCH,KAA5C;AAEA,sBACE,oBAAC,iBAAD,oBACMa,KADN;AAEE,IAAA,cAAc,EAAEd,cAFlB;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAVD;;AAYAS,uBAAuB,CAACP,SAAxB,GAAoC;AAClCQ,EAAAA,KAAK,EAAElB,SAAS,CAACmB,KAAV,CAAgB;AACrBhB,IAAAA,QAAQ,EAAEH,SAAS,CAACW,IADC;AAErBJ,IAAAA,IAAI,EAAEP,SAAS,CAACa;AAFK,GAAhB,EAGJD,UAJ+B;AAKlCR,EAAAA,cAAc,EAAEJ,SAAS,CAACc,IALQ;AAMlCN,EAAAA,QAAQ,EAAER,SAAS,CAACc;AANc,CAApC;AASAG,uBAAuB,CAACD,YAAxB,GAAuC;AACrCZ,EAAAA,cAAc,EAAE,KADqB;AAErCI,EAAAA,QAAQ,EAAE;AAF2B,CAAvC;AAKA,eAAeS,uBAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ToggleButtonField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    defaultChecked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    defaultChecked: false,\n    disabled: false,\n  };\n\n  componentDidMount() {\n    const { onChange, defaultChecked } = this.props;\n    onChange(defaultChecked);\n  }\n\n  render() {\n    const {\n      name, disabled, value, onChange,\n    } = this.props;\n\n    return (\n      <div className=\"toggle-btn\">\n        <input\n          className=\"toggle-btn__input\"\n          type=\"checkbox\"\n          name={name}\n          onChange={onChange}\n          checked={value}\n          disabled={disabled}\n        />\n        <button\n          type=\"button\"\n          className=\"toggle-btn__input-label\"\n          onClick={() => onChange(!value)}\n        >Toggle\n        </button>\n      </div>\n    );\n  }\n}\n\nconst renderToggleButtonField = (props) => {\n  const { input, defaultChecked, disabled } = props;\n\n  return (\n    <ToggleButtonField\n      {...input}\n      defaultChecked={defaultChecked}\n      disabled={disabled}\n    />\n  );\n};\n\nrenderToggleButtonField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nrenderToggleButtonField.defaultProps = {\n  defaultChecked: false,\n  disabled: false,\n};\n\nexport default renderToggleButtonField;\n"]},"metadata":{},"sourceType":"module"}