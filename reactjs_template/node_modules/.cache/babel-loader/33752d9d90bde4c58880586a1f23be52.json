{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\Alert.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Alert, Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport InformationOutlineIcon from 'mdi-react/InformationOutlineIcon';\nimport ThumbUpOutlineIcon from 'mdi-react/ThumbUpOutlineIcon';\nimport CommentAlertOutlineIcon from 'mdi-react/CommentAlertOutlineIcon';\nimport CloseCircleOutlineIcon from 'mdi-react/CloseCircleOutlineIcon';\nexport default class AlertComponent extends PureComponent {\n  constructor() {\n    super();\n\n    this.onShow = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onDismiss = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: true\n    };\n  }\n\n  render() {\n    const {\n      visible\n    } = this.state;\n    const {\n      color,\n      className,\n      icon,\n      children\n    } = this.props;\n    let Icon;\n\n    switch (color) {\n      case 'info':\n        Icon = /*#__PURE__*/React.createElement(InformationOutlineIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      case 'success':\n        Icon = /*#__PURE__*/React.createElement(ThumbUpOutlineIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      case 'warning':\n        Icon = /*#__PURE__*/React.createElement(CommentAlertOutlineIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      case 'danger':\n        Icon = /*#__PURE__*/React.createElement(CloseCircleOutlineIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    if (visible) {\n      return /*#__PURE__*/React.createElement(Alert, {\n        color: color,\n        className: className,\n        isOpen: visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, icon && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert__icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      }, Icon), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"close\",\n        type: \"button\",\n        onClick: this.onDismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lnr lnr-cross\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 76\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, children));\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, \"Show Alert\");\n  }\n\n}\nAlertComponent.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.element.isRequired\n};\nAlertComponent.defaultProps = {\n  color: '',\n  icon: false,\n  className: ''\n};","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/Alert.jsx"],"names":["React","PureComponent","Alert","Button","PropTypes","InformationOutlineIcon","ThumbUpOutlineIcon","CommentAlertOutlineIcon","CloseCircleOutlineIcon","AlertComponent","constructor","onShow","setState","visible","onDismiss","state","render","color","className","icon","children","props","Icon","propTypes","string","bool","element","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,OAAOC,sBAAP,MAAmC,kCAAnC;AAEA,eAAe,MAAMC,cAAN,SAA6BR,aAA7B,CAA2C;AAcxDS,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,MARc,GAQL,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAVa;;AAAA,SAYdC,SAZc,GAYF,MAAM;AAChB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAda;;AAGZ,SAAKE,KAAL,GAAa;AACXF,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAUDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKE,KAAzB;AAEA,UAAM;AACJE,MAAAA,KADI;AACGC,MAAAA,SADH;AACcC,MAAAA,IADd;AACoBC,MAAAA;AADpB,QAEF,KAAKC,KAFT;AAGA,QAAIC,IAAJ;;AAEA,YAAQL,KAAR;AACE,WAAK,MAAL;AACEK,QAAAA,IAAI,gBAAG,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACF,WAAK,SAAL;AACEA,QAAAA,IAAI,gBAAG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACF,WAAK,SAAL;AACEA,QAAAA,IAAI,gBAAG,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,IAAI,gBAAG,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACF;AACE;AAdJ;;AAiBA,QAAIT,OAAJ,EAAa;AACX,0BACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEI,KAAd;AAAqB,QAAA,SAAS,EAAEC,SAAhC;AAA2C,QAAA,MAAM,EAAEL,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGM,IAAI,iBAAI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BG,IAA9B,CADX,eAEE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAE,KAAKR,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjE,CAFF,eAGE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGM,QADH,CAHF,CADF;AASD;;AAED,wBAAO,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKT,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AApEuD;AAArCF,c,CACZc,S,GAAY;AACjBN,EAAAA,KAAK,EAAEb,SAAS,CAACoB,MADA;AAEjBL,EAAAA,IAAI,EAAEf,SAAS,CAACqB,IAFC;AAGjBP,EAAAA,SAAS,EAAEd,SAAS,CAACoB,MAHJ;AAIjBJ,EAAAA,QAAQ,EAAEhB,SAAS,CAACsB,OAAV,CAAkBC;AAJX,C;AADAlB,c,CAQZmB,Y,GAAe;AACpBX,EAAAA,KAAK,EAAE,EADa;AAEpBE,EAAAA,IAAI,EAAE,KAFc;AAGpBD,EAAAA,SAAS,EAAE;AAHS,C","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Alert, Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport InformationOutlineIcon from 'mdi-react/InformationOutlineIcon';\nimport ThumbUpOutlineIcon from 'mdi-react/ThumbUpOutlineIcon';\nimport CommentAlertOutlineIcon from 'mdi-react/CommentAlertOutlineIcon';\nimport CloseCircleOutlineIcon from 'mdi-react/CloseCircleOutlineIcon';\n\nexport default class AlertComponent extends PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    icon: PropTypes.bool,\n    className: PropTypes.string,\n    children: PropTypes.element.isRequired,\n  };\n\n  static defaultProps = {\n    color: '',\n    icon: false,\n    className: '',\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      visible: true,\n    };\n  }\n\n  onShow = () => {\n    this.setState({ visible: true });\n  };\n\n  onDismiss = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const { visible } = this.state;\n\n    const {\n      color, className, icon, children,\n    } = this.props;\n    let Icon;\n\n    switch (color) {\n      case 'info':\n        Icon = <InformationOutlineIcon />;\n        break;\n      case 'success':\n        Icon = <ThumbUpOutlineIcon />;\n        break;\n      case 'warning':\n        Icon = <CommentAlertOutlineIcon />;\n        break;\n      case 'danger':\n        Icon = <CloseCircleOutlineIcon />;\n        break;\n      default:\n        break;\n    }\n\n    if (visible) {\n      return (\n        <Alert color={color} className={className} isOpen={visible}>\n          {icon && <div className=\"alert__icon\">{Icon}</div>}\n          <button className=\"close\" type=\"button\" onClick={this.onDismiss}><span className=\"lnr lnr-cross\" /></button>\n          <div className=\"alert__content\">\n            {children}\n          </div>\n        </Alert>\n      );\n    }\n\n    return <Button onClick={this.onShow}>Show Alert</Button>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}