{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\pagination\\\\PaginationSmall.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport range from 'lodash.range';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\nexport default class PaginationSmallComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setPage = page => {\n      const {\n        items,\n        onChangePage\n      } = this.props;\n      const {\n        pager,\n        size\n      } = this.state;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      } // get new pager object for specified page\n\n\n      this.pager = this.getPager(items.length, page, size); // get new page of items from items array\n\n      const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n      this.setState({\n        pager: this.pager\n      }); // call change page function in parent component\n\n      onChangePage(pageOfItems);\n    };\n\n    this.getPager = (totalItems, curPage, pSize) => {\n      // default to first page\n      const currentPage = curPage || 1; // default page size is 10\n\n      const pageSize = pSize || 10; // calculate total pages\n\n      const totalPages = Math.ceil(totalItems / pageSize);\n      let startPage;\n      let endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else if (currentPage <= 6) {\n        // more than 10 total pages so calculate start and end pages\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      } // calculate start and end item indexes\n\n\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      const pages = range(startPage, endPage + 1); // return object with all pager properties required by the view\n\n      return {\n        totalItems,\n        currentPage,\n        pageSize,\n        totalPages,\n        startPage,\n        endPage,\n        startIndex,\n        endIndex,\n        pages\n      };\n    };\n\n    this.state = {\n      pager: {},\n      size: props.pageSize\n    };\n  }\n\n  componentWillMount() {\n    const {\n      items,\n      initialPage\n    } = this.props; // set page if items array isn't empty\n\n    if (items && items.length) {\n      this.setPage(initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      items,\n      initialPage\n    } = this.props; // reset page if items array has changed\n\n    if (items !== prevProps.items) {\n      this.setPage(initialPage);\n    }\n  }\n\n  render() {\n    const {\n      pager\n    } = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination__wrap pagination__wrap--small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, !pager.pages || pager.pages.length <= 1 ? '' : /*#__PURE__*/React.createElement(Pagination, {\n      className: \"pagination\",\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PaginationItem, {\n      className: \"pagination__item\",\n      disabled: pager.currentPage === 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      className: \"pagination__link pagination__link--arrow\",\n      type: \"button\",\n      onClick: () => this.setPage(pager.currentPage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      className: \"pagination__link-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(PaginationItem, {\n      className: \"pagination__item\",\n      disabled: pager.currentPage === pager.totalPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      className: \"pagination__link pagination__link--arrow\",\n      type: \"button\",\n      onClick: () => this.setPage(pager.currentPage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      className: \"pagination__link-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    })))));\n  }\n\n}\n/* eslint-enable */\n// todo: rework it\n\nPaginationSmallComponent.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number.isRequired,\n  pageSize: PropTypes.number\n};\nPaginationSmallComponent.defaultProps = {\n  pageSize: 1\n};","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/pagination/PaginationSmall.jsx"],"names":["React","PureComponent","Pagination","PaginationItem","PaginationLink","PropTypes","range","ChevronRightIcon","ChevronLeftIcon","PaginationSmallComponent","constructor","props","setPage","page","items","onChangePage","pager","size","state","totalPages","getPager","length","pageOfItems","slice","startIndex","endIndex","setState","totalItems","curPage","pSize","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","componentWillMount","initialPage","componentDidUpdate","prevProps","render","propTypes","arrayOf","any","isRequired","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport range from 'lodash.range';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\n\nexport default class PaginationSmallComponent extends PureComponent {\n  static propTypes = {\n    items: PropTypes.arrayOf(PropTypes.any).isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number.isRequired,\n    pageSize: PropTypes.number,\n  };\n\n  static defaultProps = {\n    pageSize: 1,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { pager: {}, size: props.pageSize };\n  }\n\n  componentWillMount() {\n    const { items, initialPage } = this.props;\n    // set page if items array isn't empty\n    if (items && items.length) {\n      this.setPage(initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { items, initialPage } = this.props;\n    // reset page if items array has changed\n    if (items !== prevProps.items) {\n      this.setPage(initialPage);\n    }\n  }\n\n  setPage = (page) => {\n    const { items, onChangePage } = this.props;\n    const { pager, size } = this.state;\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    this.pager = this.getPager(items.length, page, size);\n\n    // get new page of items from items array\n    const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n    // update state\n    this.setState({ pager: this.pager });\n\n    // call change page function in parent component\n    onChangePage(pageOfItems);\n  };\n\n  getPager = (totalItems, curPage, pSize) => {\n    // default to first page\n    const currentPage = curPage || 1;\n\n    // default page size is 10\n    const pageSize = pSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage;\n    let endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else if (currentPage <= 6) {\n      // more than 10 total pages so calculate start and end pages\n      startPage = 1;\n      endPage = 10;\n    } else if (currentPage + 4 >= totalPages) {\n      startPage = totalPages - 9;\n      endPage = totalPages;\n    } else {\n      startPage = currentPage - 5;\n      endPage = currentPage + 4;\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min((startIndex + pageSize) - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = range(startPage, endPage + 1);\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems,\n      currentPage,\n      pageSize,\n      totalPages,\n      startPage,\n      endPage,\n      startIndex,\n      endIndex,\n      pages,\n    };\n  };\n\n  render() {\n    const { pager } = this;\n\n    return (\n      <div className=\"pagination__wrap pagination__wrap--small\">\n        {(!pager.pages || pager.pages.length <= 1) ? ''\n          : (\n            <Pagination className=\"pagination\" dir=\"ltr\">\n              <PaginationItem className=\"pagination__item\" disabled={pager.currentPage === 1}>\n                <PaginationLink\n                  className=\"pagination__link pagination__link--arrow\"\n                  type=\"button\"\n                  onClick={() => this.setPage(pager.currentPage - 1)}\n                >\n                  <ChevronLeftIcon className=\"pagination__link-icon\" />\n                </PaginationLink>\n              </PaginationItem>\n              <PaginationItem className=\"pagination__item\" disabled={pager.currentPage === pager.totalPages}>\n                <PaginationLink\n                  className=\"pagination__link pagination__link--arrow\"\n                  type=\"button\"\n                  onClick={() => this.setPage(pager.currentPage + 1)}\n                >\n                  <ChevronRightIcon className=\"pagination__link-icon\" />\n                </PaginationLink>\n              </PaginationItem>\n            </Pagination>\n          )\n        }\n      </div>\n    );\n  }\n}\n\n/* eslint-enable */\n\n// todo: rework it\n"]},"metadata":{},"sourceType":"module"}