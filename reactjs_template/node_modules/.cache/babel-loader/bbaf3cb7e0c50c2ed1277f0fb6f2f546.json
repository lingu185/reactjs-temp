{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Dashboards\\\\MobileApp\\\\components\\\\ActiveUsers.jsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\n\nfunction getRandomArbitrary(minValue, maxValue) {\n  const ratio = maxValue - minValue + minValue;\n  return Math.random() * ratio;\n}\n\nfunction generateRandomData(dataLength, minDeviationValue, maxDeviationValue, minRange, maxRange) {\n  const rangeFactor = (maxRange - minRange) / dataLength;\n  return Array.from({\n    length: dataLength\n  }, (v, k) => ({\n    name: k,\n    point: k * rangeFactor + getRandomArbitrary(minDeviationValue, maxDeviationValue),\n    amt: 2000\n  }));\n}\n\nconst data = generateRandomData(100, -2000, 2000, 300, 6000);\n\nfunction tickFormer(tick) {\n  return `${tick / 1000}k`;\n}\n\nconst ActiveUsers = ({\n  t,\n  dir,\n  themeName\n}) => /*#__PURE__*/React.createElement(Panel, {\n  lg: 6,\n  xl: 9,\n  md: 12,\n  title: t('dashboard_mobile_app.active_users'),\n  subhead: \"See how users involve into app\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  dir: \"ltr\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n  height: 195,\n  className: \"dashboard__active-users-chart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(LineChart, {\n  height: 195,\n  data: data,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(YAxis, {\n  tickLine: false,\n  tickFormatter: tickFormer,\n  interval: \"preserveStartEnd\",\n  width: 50 // tick={{ transform: 'translate(-30, 0)', fontSize: 11 }}\n  ,\n  orientation: dir === 'rtl' ? 'right' : 'left',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(XAxis, {\n  hide: true,\n  padding: {\n    left: 30,\n    right: 30\n  },\n  reversed: dir === 'rtl',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(CartesianGrid, {\n  vertical: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }\n})), /*#__PURE__*/React.createElement(Line, {\n  type: \"linear\",\n  dataKey: \"point\",\n  dot: false,\n  stroke: \"#b8e986\",\n  strokeWidth: 2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 11\n  }\n})))));\n\nActiveUsers.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(withTranslation('common')(ActiveUsers));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Dashboards/MobileApp/components/ActiveUsers.jsx"],"names":["React","connect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","withTranslation","PropTypes","Panel","getTooltipStyles","getRandomArbitrary","minValue","maxValue","ratio","Math","random","generateRandomData","dataLength","minDeviationValue","maxDeviationValue","minRange","maxRange","rangeFactor","Array","from","length","v","k","name","point","amt","data","tickFormer","tick","ActiveUsers","t","dir","themeName","left","right","propTypes","func","isRequired","string","state","theme","className"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\n\nimport getTooltipStyles from '../../../../shared/helpers';\n\nfunction getRandomArbitrary(minValue, maxValue) {\n  const ratio = (maxValue - minValue) + minValue;\n  return Math.random() * ratio;\n}\n\nfunction generateRandomData(dataLength, minDeviationValue, maxDeviationValue, minRange, maxRange) {\n  const rangeFactor = (maxRange - minRange) / dataLength;\n\n  return Array.from({ length: dataLength }, (v, k) => (\n    {\n      name: k,\n      point: (k * rangeFactor) + getRandomArbitrary(minDeviationValue, maxDeviationValue),\n      amt: 2000,\n    }));\n}\n\nconst data = generateRandomData(100, -2000, 2000, 300, 6000);\n\nfunction tickFormer(tick) {\n  return `${tick / 1000}k`;\n}\n\nconst ActiveUsers = ({ t, dir, themeName }) => (\n  <Panel\n    lg={6}\n    xl={9}\n    md={12}\n    title={t('dashboard_mobile_app.active_users')}\n    subhead=\"See how users involve into app\"\n  >\n    <div dir=\"ltr\">\n      <ResponsiveContainer height={195} className=\"dashboard__active-users-chart\">\n        <LineChart\n          height={195}\n          data={data}\n        >\n          <YAxis\n            tickLine={false}\n            tickFormatter={tickFormer}\n            interval=\"preserveStartEnd\"\n            width={50}\n            // tick={{ transform: 'translate(-30, 0)', fontSize: 11 }}\n            orientation={dir === 'rtl' ? 'right' : 'left'}\n          />\n          <XAxis\n            hide\n            padding={{ left: 30, right: 30 }}\n            reversed={dir === 'rtl'}\n          />\n          <CartesianGrid vertical={false} />\n          <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n          <Line type=\"linear\" dataKey=\"point\" dot={false} stroke=\"#b8e986\" strokeWidth={2} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  </Panel>\n);\n\nActiveUsers.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(ActiveUsers));\n"]},"metadata":{},"sourceType":"module"}