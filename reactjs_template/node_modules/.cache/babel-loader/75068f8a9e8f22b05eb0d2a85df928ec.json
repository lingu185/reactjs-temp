{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\ECommerce\\\\ProductPage\\\\components\\\\ColorSelect.jsx\";\nimport React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst SelectOption = ({\n  innerProps,\n  isDisabled,\n  data\n}) => !isDisabled ? /*#__PURE__*/React.createElement(\"div\", Object.assign({\n  className: \"react-select__option\"\n}, innerProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}), data.label, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"react-select__color\",\n  style: {\n    backgroundColor: data.color\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n})) : null;\n\nSelectOption.propTypes = {\n  isDisabled: PropTypes.bool,\n  innerProps: PropTypes.shape().isRequired,\n  data: PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string\n  }).isRequired\n};\nSelectOption.defaultProps = {\n  isDisabled: false\n};\nexport default class ColorSelect extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        value: selectedOption\n      });\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const {\n      options,\n      placeholder\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Select, {\n      value: value,\n      onChange: this.handleChange,\n      options: options,\n      clearable: false,\n      className: \"react-select\",\n      classNamePrefix: \"react-select\",\n      placeholder: placeholder,\n      components: {\n        Option: SelectOption\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\nColorSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string\n  })),\n  placeholder: PropTypes.string\n};\nColorSelect.defaultProps = {\n  options: null,\n  placeholder: 'Select...'\n};","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/ECommerce/ProductPage/components/ColorSelect.jsx"],"names":["React","PureComponent","Select","PropTypes","SelectOption","innerProps","isDisabled","data","label","backgroundColor","color","propTypes","bool","shape","isRequired","value","string","defaultProps","ColorSelect","constructor","props","handleChange","selectedOption","setState","state","render","options","placeholder","Option","arrayOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,UADoB;AACRC,EAAAA,UADQ;AACIC,EAAAA;AADJ,CAAD,KAEd,CAACD,UAAD,gBACL;AACE,EAAA,SAAS,EAAC;AADZ,GAEMD,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIGE,IAAI,CAACC,KAJR,eAKE;AACE,EAAA,SAAS,EAAC,qBADZ;AAEE,EAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAEF,IAAI,CAACG;AAAxB,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADK,GAWH,IAbJ;;AAgBAN,YAAY,CAACO,SAAb,GAAyB;AACvBL,EAAAA,UAAU,EAAEH,SAAS,CAACS,IADC;AAEvBP,EAAAA,UAAU,EAAEF,SAAS,CAACU,KAAV,GAAkBC,UAFP;AAGvBP,EAAAA,IAAI,EAAEJ,SAAS,CAACU,KAAV,CAAgB;AACpBE,IAAAA,KAAK,EAAEZ,SAAS,CAACa,MADG;AAEpBR,IAAAA,KAAK,EAAEL,SAAS,CAACa,MAFG;AAGpBN,IAAAA,KAAK,EAAEP,SAAS,CAACa;AAHG,GAAhB,EAIHF;AAPoB,CAAzB;AAUAV,YAAY,CAACa,YAAb,GAA4B;AAC1BX,EAAAA,UAAU,EAAE;AADc,CAA5B;AAIA,eAAe,MAAMY,WAAN,SAA0BjB,aAA1B,CAAwC;AAerDkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOHC,cAAD,IAAoB;AACjC,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KATkB;;AAEjB,SAAKE,KAAL,GAAa;AACXT,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAMDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA2B,KAAKP,KAAtC;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAY,KAAKS,KAAvB;AAEA,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAET,KADT;AAEE,MAAA,QAAQ,EAAE,KAAKM,YAFjB;AAGE,MAAA,OAAO,EAAEK,OAHX;AAIE,MAAA,SAAS,EAAE,KAJb;AAKE,MAAA,SAAS,EAAC,cALZ;AAME,MAAA,eAAe,EAAC,cANlB;AAOE,MAAA,WAAW,EAAEC,WAPf;AAQE,MAAA,UAAU,EAAE;AAAEC,QAAAA,MAAM,EAAExB;AAAV,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD;;AA1CoD;AAAlCc,W,CACZP,S,GAAY;AACjBe,EAAAA,OAAO,EAAEvB,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAACU,KAAV,CAAgB;AACzCE,IAAAA,KAAK,EAAEZ,SAAS,CAACa,MADwB;AAEzCR,IAAAA,KAAK,EAAEL,SAAS,CAACa,MAFwB;AAGzCN,IAAAA,KAAK,EAAEP,SAAS,CAACa;AAHwB,GAAhB,CAAlB,CADQ;AAMjBW,EAAAA,WAAW,EAAExB,SAAS,CAACa;AANN,C;AADAE,W,CAUZD,Y,GAAe;AACpBS,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,WAAW,EAAE;AAFO,C","sourcesContent":["import React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst SelectOption = ({\n  innerProps, isDisabled, data,\n}) => (!isDisabled ? (\n  <div\n    className=\"react-select__option\"\n    {...innerProps}\n  >\n    {data.label}\n    <span\n      className=\"react-select__color\"\n      style={{ backgroundColor: data.color }}\n    />\n  </div>\n) : null);\n\n\nSelectOption.propTypes = {\n  isDisabled: PropTypes.bool,\n  innerProps: PropTypes.shape().isRequired,\n  data: PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string,\n  }).isRequired,\n};\n\nSelectOption.defaultProps = {\n  isDisabled: false,\n};\n\nexport default class ColorSelect extends PureComponent {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n      color: PropTypes.string,\n    })),\n    placeholder: PropTypes.string,\n  };\n\n  static defaultProps = {\n    options: null,\n    placeholder: 'Select...',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ value: selectedOption });\n  };\n\n  render() {\n    const { options, placeholder } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Select\n        value={value}\n        onChange={this.handleChange}\n        options={options}\n        clearable={false}\n        className=\"react-select\"\n        classNamePrefix=\"react-select\"\n        placeholder={placeholder}\n        components={{ Option: SelectOption }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}