{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\TimePicker.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport TimePicker from 'rc-time-picker';\nimport AvTimerIcon from 'mdi-react/AvTimerIcon';\nimport classNames from 'classnames';\n\nclass TimePickerField extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.setOpen = ({\n      open\n    }) => {\n      this.setState({\n        open\n      });\n    };\n\n    this.toggleOpen = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        open: !prevState.open\n      }));\n    };\n  }\n\n  render() {\n    const {\n      name,\n      onChange,\n      timeMode,\n      theme\n    } = this.props;\n    const {\n      open\n    } = this.state;\n    const btnClass = classNames({\n      'form__form-group-button': true,\n      active: open\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__form-group-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker, {\n      open: open,\n      onOpen: this.setOpen,\n      onClose: this.setOpen,\n      name: name,\n      onChange: onChange,\n      showSecond: false,\n      popupClassName: theme === 'theme-dark' ? 'theme-dark' : 'theme-light',\n      use12Hours: timeMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: btnClass,\n      type: \"button\",\n      onClick: this.toggleOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AvTimerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nTimePickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  timeMode: PropTypes.bool.isRequired,\n  theme: PropTypes.string\n};\nTimePickerField.defaultProps = {\n  theme: 'theme-light'\n};\n\nconst renderTimePickerField = props => {\n  const {\n    input,\n    timeMode,\n    theme\n  } = props;\n  return /*#__PURE__*/React.createElement(TimePickerField, Object.assign({}, input, {\n    timeMode: timeMode,\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }));\n};\n\nrenderTimePickerField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  timeMode: PropTypes.bool,\n  theme: PropTypes.string\n};\nrenderTimePickerField.defaultProps = {\n  timeMode: false,\n  theme: null\n};\nexport default renderTimePickerField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/TimePicker.jsx"],"names":["React","PureComponent","PropTypes","TimePicker","AvTimerIcon","classNames","TimePickerField","state","open","setOpen","setState","toggleOpen","e","preventDefault","prevState","render","name","onChange","timeMode","theme","props","btnClass","active","propTypes","func","isRequired","string","bool","defaultProps","renderTimePickerField","input","shape"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport TimePicker from 'rc-time-picker';\nimport AvTimerIcon from 'mdi-react/AvTimerIcon';\nimport classNames from 'classnames';\n\nclass TimePickerField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    timeMode: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n  };\n\n  static defaultProps = {\n    theme: 'theme-light',\n  };\n\n  state = {\n    open: false,\n  };\n\n  setOpen = ({ open }) => {\n    this.setState({ open });\n  };\n\n  toggleOpen = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ open: !prevState.open }));\n  };\n\n  render() {\n    const {\n      name, onChange, timeMode, theme,\n    } = this.props;\n    const { open } = this.state;\n    const btnClass = classNames({\n      'form__form-group-button': true,\n      active: open,\n    });\n\n    return (\n      <div className=\"form__form-group-field\">\n        <TimePicker\n          open={open}\n          onOpen={this.setOpen}\n          onClose={this.setOpen}\n          name={name}\n          onChange={onChange}\n          showSecond={false}\n          popupClassName={theme === 'theme-dark' ? 'theme-dark' : 'theme-light'}\n          use12Hours={timeMode}\n        />\n        <button\n          className={btnClass}\n          type=\"button\"\n          onClick={this.toggleOpen}\n        >\n          <AvTimerIcon />\n        </button>\n      </div>\n    );\n  }\n}\n\nconst renderTimePickerField = (props) => {\n  const { input, timeMode, theme } = props;\n  return (\n    <TimePickerField\n      {...input}\n      timeMode={timeMode}\n      theme={theme}\n    />\n  );\n};\n\nrenderTimePickerField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  timeMode: PropTypes.bool,\n  theme: PropTypes.string,\n};\n\nrenderTimePickerField.defaultProps = {\n  timeMode: false,\n  theme: null,\n};\n\nexport default renderTimePickerField;\n"]},"metadata":{},"sourceType":"module"}