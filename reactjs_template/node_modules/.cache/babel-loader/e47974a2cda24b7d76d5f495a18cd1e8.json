{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\Panel.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport { Badge, Card, CardBody, Col, Collapse } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport AutorenewIcon from 'mdi-react/AutorenewIcon';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\nexport default class AlertComponent extends PureComponent {\n  constructor() {\n    super();\n\n    this.onShow = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onDismiss = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.onCollapse = () => {\n      this.setState(prevState => ({\n        collapse: !prevState.collapse\n      }));\n    };\n\n    this.onRefresh = () => {\n      // your async logic here\n      this.setState(prevState => ({\n        refresh: !prevState.refresh\n      }));\n      setTimeout(() => this.setState({\n        refresh: false\n      }), 5000);\n    };\n\n    this.state = {\n      visible: true,\n      collapse: true,\n      refresh: false\n    };\n  }\n\n  render() {\n    const {\n      md,\n      lg,\n      xl,\n      sm,\n      xs,\n      color,\n      divider,\n      icon,\n      title,\n      label,\n      subhead,\n      before,\n      panelClass,\n      children\n    } = this.props;\n    const {\n      collapse,\n      refresh,\n      visible\n    } = this.state;\n\n    if (visible) {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: md,\n        lg: lg,\n        xl: xl,\n        sm: sm,\n        xs: xs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: `panel${color ? ` panel--${color}` : ''}\n            ${divider ? ' panel--divider' : ''}${collapse ? '' : ' panel--collapse'} ${panelClass}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"panel__body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, refresh ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel__refresh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(LoadingIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 58\n        }\n      })) : '', /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel__btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"panel__btn\",\n        type: \"button\",\n        onClick: this.onCollapse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MinusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 88\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"panel__btn\",\n        type: \"button\",\n        onClick: this.onRefresh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AutorenewIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 87\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"panel__btn\",\n        type: \"button\",\n        onClick: this.onDismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 87\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"bold-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, icon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: `panel__icon lnr lnr-${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }\n      }) : '', title, /*#__PURE__*/React.createElement(Badge, {\n        className: \"panel__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, label)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"subhead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, subhead)), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: collapse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, children)))), before);\n    }\n\n    return '';\n  }\n\n}\nAlertComponent.propTypes = {\n  divider: PropTypes.bool,\n  color: PropTypes.string,\n  title: PropTypes.string,\n  subhead: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  md: PropTypes.number,\n  lg: PropTypes.number,\n  xl: PropTypes.number,\n  sm: PropTypes.number,\n  xs: PropTypes.number,\n  before: PropTypes.element,\n  panelClass: PropTypes.string\n};\nAlertComponent.defaultProps = {\n  divider: false,\n  color: '',\n  title: '',\n  subhead: '',\n  label: '',\n  icon: '',\n  md: 0,\n  lg: 0,\n  xl: 0,\n  sm: 0,\n  xs: 0,\n  before: null,\n  panelClass: ''\n};\nexport const PanelTitle = ({\n  title\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"panel__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }\n}, title));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/Panel.jsx"],"names":["React","PureComponent","Badge","Card","CardBody","Col","Collapse","PropTypes","CloseIcon","MinusIcon","AutorenewIcon","LoadingIcon","AlertComponent","constructor","onShow","setState","visible","onDismiss","onCollapse","prevState","collapse","onRefresh","refresh","setTimeout","state","render","md","lg","xl","sm","xs","color","divider","icon","title","label","subhead","before","panelClass","children","props","propTypes","bool","string","number","element","defaultProps","PanelTitle"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport {\n  Badge, Card, CardBody, Col, Collapse,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport AutorenewIcon from 'mdi-react/AutorenewIcon';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\n\nexport default class AlertComponent extends PureComponent {\n  static propTypes = {\n    divider: PropTypes.bool,\n    color: PropTypes.string,\n    title: PropTypes.string,\n    subhead: PropTypes.string,\n    label: PropTypes.string,\n    icon: PropTypes.string,\n    md: PropTypes.number,\n    lg: PropTypes.number,\n    xl: PropTypes.number,\n    sm: PropTypes.number,\n    xs: PropTypes.number,\n    before: PropTypes.element,\n    panelClass: PropTypes.string,\n  };\n\n  static defaultProps = {\n    divider: false,\n    color: '',\n    title: '',\n    subhead: '',\n    label: '',\n    icon: '',\n    md: 0,\n    lg: 0,\n    xl: 0,\n    sm: 0,\n    xs: 0,\n    before: null,\n    panelClass: '',\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      visible: true,\n      collapse: true,\n      refresh: false,\n    };\n  }\n\n  onShow = () => {\n    this.setState({ visible: true });\n  };\n\n  onDismiss = () => {\n    this.setState({ visible: false });\n  };\n\n  onCollapse = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  onRefresh = () => {\n    // your async logic here\n    this.setState(prevState => ({ refresh: !prevState.refresh }));\n    setTimeout(() => this.setState({ refresh: false }), 5000);\n  };\n\n  render() {\n    const {\n      md, lg, xl, sm, xs, color, divider, icon, title, label, subhead, before,\n      panelClass, children,\n    } = this.props;\n\n    const { collapse, refresh, visible } = this.state;\n\n    if (visible) {\n      return (\n        <Col md={md} lg={lg} xl={xl} sm={sm} xs={xs}>\n          <Card\n            className={`panel${color ? ` panel--${color}` : ''}\n            ${divider ? ' panel--divider' : ''}${collapse ? '' : ' panel--collapse'} ${panelClass}`}\n          >\n            <CardBody className=\"panel__body\">\n              {refresh ? <div className=\"panel__refresh\"><LoadingIcon /></div> : ''}\n              <div className=\"panel__btns\">\n                <button className=\"panel__btn\" type=\"button\" onClick={this.onCollapse}><MinusIcon /></button>\n                <button className=\"panel__btn\" type=\"button\" onClick={this.onRefresh}><AutorenewIcon /></button>\n                <button className=\"panel__btn\" type=\"button\" onClick={this.onDismiss}><CloseIcon /></button>\n              </div>\n              <div className=\"panel__title\">\n                <h5 className=\"bold-text\">\n                  {icon ? <span className={`panel__icon lnr lnr-${icon}`} /> : ''}\n                  {title}\n                  <Badge className=\"panel__label\">{label}</Badge>\n                </h5>\n                <h5 className=\"subhead\">{subhead}</h5>\n              </div>\n              <Collapse isOpen={collapse}>\n                <div className=\"panel__content\">\n                  {children}\n                </div>\n              </Collapse>\n            </CardBody>\n          </Card>\n          {before}\n        </Col>\n      );\n    }\n\n    return '';\n  }\n}\n\nexport const PanelTitle = ({ title }) => (\n  <div className=\"panel__title\">\n    <h5 className=\"bold-text\">\n      {title}\n    </h5>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}