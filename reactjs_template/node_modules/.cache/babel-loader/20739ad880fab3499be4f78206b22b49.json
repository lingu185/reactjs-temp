{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Tables\\\\MaterialTable\\\\components\\\\MatTable.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MatTableHead from './MatTableHead';\nimport MatTableToolbar from './MatTableToolbar';\nlet counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nfunction getSorting(order, orderBy) {\n  if (order === 'desc') {\n    return (a, b) => {\n      if (a[orderBy] < b[orderBy]) {\n        return -1;\n      }\n\n      if (a[orderBy] > b[orderBy]) {\n        return 1;\n      }\n\n      return 0;\n    };\n  }\n\n  return (a, b) => {\n    if (a[orderBy] > b[orderBy]) {\n      return -1;\n    }\n\n    if (a[orderBy] < b[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  };\n}\n\nexport default class MatTable extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: new Map([]),\n      data: [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = 'desc';\n      const {\n        orderBy: stateOrderBy,\n        order: stateOrder\n      } = this.state;\n\n      if (stateOrderBy === property && stateOrder === 'desc') {\n        order = 'asc';\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleSelectAllClick = (event, checked) => {\n      if (checked) {\n        const {\n          data\n        } = this.state;\n        const newSelected = new Map();\n        data.map(n => newSelected.set(n.id, true));\n        this.setState({\n          selected: newSelected\n        });\n        return;\n      }\n\n      this.setState({\n        selected: new Map([])\n      });\n    };\n\n    this.handleClick = (event, id) => {\n      const {\n        selected\n      } = this.state;\n      const newSelected = new Map(selected);\n      const value = newSelected.get(id);\n      let isActive = true;\n\n      if (value) {\n        isActive = false;\n      }\n\n      newSelected.set(id, isActive);\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleDeleteSelected = () => {\n      const {\n        data\n      } = this.state;\n      let copyData = [...data];\n      const {\n        selected\n      } = this.state;\n\n      for (let i = 0; i < [...selected].filter(el => el[1]).length; i += 1) {\n        copyData = copyData.filter(obj => obj.id !== selected[i]);\n      }\n\n      this.setState({\n        data: copyData,\n        selected: new Map([])\n      });\n    };\n\n    this.isSelected = id => {\n      const {\n        selected\n      } = this.state;\n      return !!selected.get(id);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      order,\n      orderBy,\n      selected,\n      rowsPerPage,\n      page\n    } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"bold-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Material table\")), /*#__PURE__*/React.createElement(MatTableToolbar, {\n      numSelected: [...selected].filter(el => el[1]).length,\n      handleDeleteSelected: this.handleDeleteSelected,\n      onRequestSort: this.handleRequestSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"material-table__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"material-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MatTableHead, {\n      numSelected: [...selected].filter(el => el[1]).length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: this.handleSelectAllClick,\n      onRequestSort: this.handleRequestSort,\n      rowCount: data.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, data.sort(getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(d => {\n      const isSelected = this.isSelected(d.id);\n      return /*#__PURE__*/React.createElement(TableRow, {\n        className: \"material-table__row\",\n        role: \"checkbox\",\n        onClick: event => this.handleClick(event, d.id),\n        \"aria-checked\": isSelected,\n        tabIndex: -1,\n        key: d.id,\n        selected: isSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: \"material-table__cell\",\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: isSelected,\n        className: \"material-table__checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"material-table__cell material-table__cell-right\",\n        component: \"th\",\n        scope: \"row\",\n        padding: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 27\n        }\n      }, d.name), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"material-table__cell material-table__cell-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }\n      }, d.calories), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"material-table__cell material-table__cell-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 27\n        }\n      }, d.fat), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"material-table__cell material-table__cell-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 27\n        }\n      }, d.carbs), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"material-table__cell material-table__cell-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }\n      }, d.protein));\n    }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        height: 49 * emptyRows\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(TablePagination, {\n      component: \"div\",\n      className: \"material-table__pagination\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      rowsPerPageOptions: [5, 10, 15],\n      dir: \"ltr\",\n      SelectProps: {\n        inputProps: {\n          'aria-label': 'rows per page'\n        },\n        native: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Tables/MaterialTable/components/MatTable.jsx"],"names":["React","PureComponent","Card","CardBody","Col","Table","TableBody","TableCell","TablePagination","TableRow","Checkbox","MatTableHead","MatTableToolbar","counter","createData","name","calories","fat","carbs","protein","id","getSorting","order","orderBy","a","b","MatTable","state","selected","Map","data","page","rowsPerPage","handleRequestSort","event","property","stateOrderBy","stateOrder","setState","handleSelectAllClick","checked","newSelected","map","n","set","handleClick","value","get","isActive","handleChangePage","handleChangeRowsPerPage","target","handleDeleteSelected","copyData","i","filter","el","length","obj","isSelected","render","emptyRows","Math","min","sort","slice","d","height","inputProps","native"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MatTableHead from './MatTableHead';\nimport MatTableToolbar from './MatTableToolbar';\n\nlet counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {\n    id: counter, name, calories, fat, carbs, protein,\n  };\n}\n\nfunction getSorting(order, orderBy) {\n  if (order === 'desc') {\n    return (a, b) => {\n      if (a[orderBy] < b[orderBy]) {\n        return -1;\n      }\n      if (a[orderBy] > b[orderBy]) {\n        return 1;\n      }\n      return 0;\n    };\n  }\n  return (a, b) => {\n    if (a[orderBy] > b[orderBy]) {\n      return -1;\n    }\n    if (a[orderBy] < b[orderBy]) {\n      return 1;\n    }\n    return 0;\n  };\n}\n\nexport default class MatTable extends PureComponent {\n  state = {\n    order: 'asc',\n    orderBy: 'calories',\n    selected: new Map([]),\n    data: [\n      createData('Cupcake', 305, 3.7, 67, 4.3),\n      createData('Donut', 452, 25.0, 51, 4.9),\n      createData('Eclair', 262, 16.0, 24, 6.0),\n      createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n      createData('Gingerbread', 356, 16.0, 49, 3.9),\n      createData('Honeycomb', 408, 3.2, 87, 6.5),\n      createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n      createData('Jelly Bean', 375, 0.0, 94, 0.0),\n      createData('KitKat', 518, 26.0, 65, 7.0),\n      createData('Lollipop', 392, 0.2, 98, 0.0),\n      createData('Marshmallow', 318, 0, 81, 2.0),\n      createData('Nougat', 360, 19.0, 9, 37.0),\n      createData('Oreo', 437, 18.0, 63, 4.0),\n    ],\n    page: 0,\n    rowsPerPage: 5,\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n    const { orderBy: stateOrderBy, order: stateOrder } = this.state;\n\n    if (stateOrderBy === property && stateOrder === 'desc') { order = 'asc'; }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = (event, checked) => {\n    if (checked) {\n      const { data } = this.state;\n      const newSelected = new Map();\n      data.map(n => newSelected.set(n.id, true));\n      this.setState({ selected: newSelected });\n      return;\n    }\n    this.setState({ selected: new Map([]) });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const newSelected = new Map(selected);\n    const value = newSelected.get(id);\n    let isActive = true;\n    if (value) {\n      isActive = false;\n    }\n    newSelected.set(id, isActive);\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleDeleteSelected = () => {\n    const { data } = this.state;\n    let copyData = [...data];\n    const { selected } = this.state;\n\n    for (let i = 0; i < [...selected].filter(el => el[1]).length; i += 1) {\n      copyData = copyData.filter(obj => obj.id !== selected[i]);\n    }\n\n    this.setState({ data: copyData, selected: new Map([]) });\n  };\n\n  isSelected = (id) => {\n    const { selected } = this.state;\n    return !!selected.get(id);\n  };\n\n  render() {\n    const {\n      data, order, orderBy, selected, rowsPerPage, page,\n    } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - (page * rowsPerPage));\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">Material table</h5>\n            </div>\n            <MatTableToolbar\n              numSelected={[...selected].filter(el => el[1]).length}\n              handleDeleteSelected={this.handleDeleteSelected}\n              onRequestSort={this.handleRequestSort}\n            />\n            <div className=\"material-table__wrap\">\n              <Table className=\"material-table\">\n                <MatTableHead\n                  numSelected={[...selected].filter(el => el[1]).length}\n                  order={order}\n                  orderBy={orderBy}\n                  onSelectAllClick={this.handleSelectAllClick}\n                  onRequestSort={this.handleRequestSort}\n                  rowCount={data.length}\n                />\n                <TableBody>\n                  {data\n                    .sort(getSorting(order, orderBy))\n                    .slice(page * rowsPerPage, (page * rowsPerPage) + rowsPerPage)\n                    .map((d) => {\n                      const isSelected = this.isSelected(d.id);\n                      return (\n                        <TableRow\n                          className=\"material-table__row\"\n                          role=\"checkbox\"\n                          onClick={event => this.handleClick(event, d.id)}\n                          aria-checked={isSelected}\n                          tabIndex={-1}\n                          key={d.id}\n                          selected={isSelected}\n                        >\n                          <TableCell className=\"material-table__cell\" padding=\"checkbox\">\n                            <Checkbox checked={isSelected} className=\"material-table__checkbox\" />\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                            component=\"th\"\n                            scope=\"row\"\n                            padding=\"none\"\n                          >\n                            {d.name}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.calories}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.fat}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.carbs}\n                          </TableCell>\n                          <TableCell\n                            className=\"material-table__cell material-table__cell-right\"\n                          >{d.protein}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 49 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n            <TablePagination\n              component=\"div\"\n              className=\"material-table__pagination\"\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              backIconButtonProps={{ 'aria-label': 'Previous Page' }}\n              nextIconButtonProps={{ 'aria-label': 'Next Page' }}\n              onChangePage={this.handleChangePage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n              rowsPerPageOptions={[5, 10, 15]}\n              dir=\"ltr\"\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}