{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\CheckBox.jsx\";\n\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass CheckBoxField extends PureComponent {\n  componentDidMount() {\n    const {\n      onChange,\n      defaultChecked\n    } = this.props;\n    onChange(defaultChecked);\n  }\n\n  render() {\n    const {\n      disabled,\n      className,\n      name,\n      value,\n      onChange,\n      label,\n      color\n    } = this.props;\n    const CheckboxClass = classNames({\n      'checkbox-btn': true,\n      disabled\n    });\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: `${CheckboxClass} ${className ? ` checkbox-btn--${className}` : ''}`,\n      htmlFor: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"checkbox-btn__checkbox\",\n      type: \"checkbox\",\n      id: name,\n      name: name,\n      onChange: onChange,\n      checked: value,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox-btn__checkbox-custom\",\n      style: color ? {\n        background: color,\n        borderColor: color\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), className === 'button' ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox-btn__label-svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CheckIcon, {\n      className: \"checkbox-btn__label-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(CloseIcon, {\n      className: \"checkbox-btn__label-uncheck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })) : '', /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox-btn__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, label));\n  }\n\n}\n\nCheckBoxField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string\n};\nCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: ''\n};\n\nconst renderCheckBoxField = props => {\n  const {\n    input,\n    label,\n    defaultChecked,\n    disabled,\n    className,\n    color\n  } = props;\n  return /*#__PURE__*/React.createElement(CheckBoxField, Object.assign({}, input, {\n    label: label,\n    defaultChecked: defaultChecked,\n    disabled: disabled,\n    className: className,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }));\n};\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string\n};\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: ''\n};\nexport default renderCheckBoxField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/CheckBox.jsx"],"names":["React","PureComponent","CheckIcon","CloseIcon","PropTypes","classNames","CheckBoxField","componentDidMount","onChange","defaultChecked","props","render","disabled","className","name","value","label","color","CheckboxClass","background","borderColor","propTypes","func","isRequired","string","oneOfType","bool","defaultProps","renderCheckBoxField","input","shape"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n\nclass CheckBoxField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]).isRequired,\n    label: PropTypes.string,\n    defaultChecked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    color: PropTypes.string,\n  };\n\n  static defaultProps = {\n    label: '',\n    defaultChecked: false,\n    disabled: false,\n    className: '',\n    color: '',\n  };\n\n  componentDidMount() {\n    const { onChange, defaultChecked } = this.props;\n    onChange(defaultChecked);\n  }\n\n  render() {\n    const {\n      disabled, className, name, value, onChange, label, color,\n    } = this.props;\n    const CheckboxClass = classNames({\n      'checkbox-btn': true,\n      disabled,\n    });\n\n    return (\n      <label\n        className={`${CheckboxClass} ${className ? ` checkbox-btn--${className}` : ''}`}\n        htmlFor={name}\n      >\n        <input\n          className=\"checkbox-btn__checkbox\"\n          type=\"checkbox\"\n          id={name}\n          name={name}\n          onChange={onChange}\n          checked={value}\n          disabled={disabled}\n        />\n        <span\n          className=\"checkbox-btn__checkbox-custom\"\n          style={color ? { background: color, borderColor: color } : {}}\n        >\n          <CheckIcon />\n        </span>\n        {className === 'button'\n          ? (\n            <span className=\"checkbox-btn__label-svg\">\n              <CheckIcon className=\"checkbox-btn__label-check\" />\n              <CloseIcon className=\"checkbox-btn__label-uncheck\" />\n            </span>\n          ) : ''}\n        <span className=\"checkbox-btn__label\">\n          {label}\n        </span>\n      </label>\n    );\n  }\n}\n\nconst renderCheckBoxField = (props) => {\n  const {\n    input, label, defaultChecked, disabled, className, color,\n  } = props;\n  return (\n    <CheckBoxField\n      {...input}\n      label={label}\n      defaultChecked={defaultChecked}\n      disabled={disabled}\n      className={className}\n      color={color}\n    />\n  );\n};\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: '',\n};\n\nexport default renderCheckBoxField;\n"]},"metadata":{},"sourceType":"module"}