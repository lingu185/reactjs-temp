{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Layout\\\\customizer\\\\ToggleTheme.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProps } from '../../../shared/prop-types/ReducerProps';\n\nclass ToggleTheme extends PureComponent {\n  render() {\n    const {\n      theme,\n      changeToLight,\n      changeToDark\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"toggle-btn customizer__toggle\",\n      htmlFor: \"theme_toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"toggle-btn__input\",\n      type: \"checkbox\",\n      name: \"theme_toggle\",\n      id: \"theme_toggle\",\n      checked: theme.className === 'theme-dark',\n      onChange: theme.className === 'theme-dark' ? changeToLight : changeToDark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"toggle-btn__input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Dark Theme\"));\n  }\n\n}\n\nToggleTheme.propTypes = {\n  theme: ThemeProps.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired\n};\nexport default ToggleTheme;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Layout/customizer/ToggleTheme.jsx"],"names":["React","PureComponent","PropTypes","ThemeProps","ToggleTheme","render","theme","changeToLight","changeToDark","props","className","propTypes","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,yCAA3B;;AAEA,MAAMC,WAAN,SAA0BH,aAA1B,CAAwC;AAOtCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,aAAT;AAAwBC,MAAAA;AAAxB,QAAyC,KAAKC,KAApD;AAEA,wBACE;AAAO,MAAA,SAAS,EAAC,+BAAjB;AAAiD,MAAA,OAAO,EAAC,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,EAAE,EAAC,cAJL;AAKE,MAAA,OAAO,EAAEH,KAAK,CAACI,SAAN,KAAoB,YAL/B;AAME,MAAA,QAAQ,EAAEJ,KAAK,CAACI,SAAN,KAAoB,YAApB,GAAmCH,aAAnC,GAAmDC,YAN/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;AAcD;;AAxBqC;;AAAlCJ,W,CACGO,S,GAAY;AACjBL,EAAAA,KAAK,EAAEH,UAAU,CAACS,UADD;AAEjBJ,EAAAA,YAAY,EAAEN,SAAS,CAACW,IAAV,CAAeD,UAFZ;AAGjBL,EAAAA,aAAa,EAAEL,SAAS,CAACW,IAAV,CAAeD;AAHb,C;AA0BrB,eAAeR,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProps } from '../../../shared/prop-types/ReducerProps';\n\nclass ToggleTheme extends PureComponent {\n  static propTypes = {\n    theme: ThemeProps.isRequired,\n    changeToDark: PropTypes.func.isRequired,\n    changeToLight: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { theme, changeToLight, changeToDark } = this.props;\n\n    return (\n      <label className=\"toggle-btn customizer__toggle\" htmlFor=\"theme_toggle\">\n        <input\n          className=\"toggle-btn__input\"\n          type=\"checkbox\"\n          name=\"theme_toggle\"\n          id=\"theme_toggle\"\n          checked={theme.className === 'theme-dark'}\n          onChange={theme.className === 'theme-dark' ? changeToLight : changeToDark}\n        />\n        <span className=\"toggle-btn__input-label\" />\n        <span>Dark Theme</span>\n      </label>\n    );\n  }\n}\n\nexport default ToggleTheme;\n"]},"metadata":{},"sourceType":"module"}