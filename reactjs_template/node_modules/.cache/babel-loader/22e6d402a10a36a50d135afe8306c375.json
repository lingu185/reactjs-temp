{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Dashboards\\\\ECommerce\\\\components\\\\SalesStatistisBar.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\nconst dataYearly = [{\n  name: 'Jan',\n  uv: 4000\n}, {\n  name: 'Feb',\n  uv: 3000\n}, {\n  name: 'Mar',\n  uv: 2000\n}, {\n  name: 'Apr',\n  uv: 2780\n}, {\n  name: 'May',\n  uv: 1890\n}, {\n  name: 'June',\n  uv: 2390\n}, {\n  name: 'July',\n  uv: 3490\n}, {\n  name: 'Aug',\n  uv: 2000\n}, {\n  name: 'Sep',\n  uv: 2780\n}, {\n  name: 'Oct',\n  uv: 1890\n}, {\n  name: 'Nov',\n  uv: 3578\n}, {\n  name: 'Dec',\n  uv: 2378\n}];\nconst dataMontly = [{\n  name: '01.02',\n  uv: 3654\n}, {\n  name: '02.02',\n  uv: 2578\n}, {\n  name: '03.02',\n  uv: 2000\n}, {\n  name: '04.02',\n  uv: 4383\n}, {\n  name: '05.02',\n  uv: 1890\n}, {\n  name: '06.02',\n  uv: 2390\n}, {\n  name: '07.02',\n  uv: 3490\n}, {\n  name: '08.02',\n  uv: 2000\n}, {\n  name: '09.02',\n  uv: 2780\n}, {\n  name: '10.02',\n  uv: 1890\n}, {\n  name: '11.02',\n  uv: 3578\n}, {\n  name: '12.02',\n  uv: 3644\n}, {\n  name: '13.02',\n  uv: 4000\n}, {\n  name: '14.02',\n  uv: 3000\n}, {\n  name: '15.02',\n  uv: 2000\n}, {\n  name: '16.02',\n  uv: 2780\n}, {\n  name: '17.02',\n  uv: 1890\n}, {\n  name: '18.02',\n  uv: 2390\n}, {\n  name: '19.02',\n  uv: 3490\n}, {\n  name: '20.02',\n  uv: 2000\n}, {\n  name: '21.02',\n  uv: 2780\n}, {\n  name: '22.02',\n  uv: 1890\n}, {\n  name: '23.02',\n  uv: 3578\n}, {\n  name: '24.02',\n  uv: 2390\n}, {\n  name: '25.02',\n  uv: 3578\n}, {\n  name: '26.02',\n  uv: 1890\n}, {\n  name: '27.02',\n  uv: 4000\n}, {\n  name: '28.02',\n  uv: 2378\n}];\n\nclass SalesStatistisBar extends PureComponent {\n  constructor() {\n    super();\n\n    this.handleChange = () => {\n      this.setState(prevState => ({\n        yearly: !prevState.yearly\n      }));\n    };\n\n    this.state = {\n      yearly: true\n    };\n  }\n\n  render() {\n    const {\n      t,\n      themeName\n    } = this.props;\n    const {\n      yearly\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Panel, {\n      xl: 3,\n      lg: 7,\n      md: 12,\n      title: t('dashboard_commerce.sales_statistic'),\n      subhead: \"See how effective your business is\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      height: 260,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, yearly ? /*#__PURE__*/React.createElement(BarChart, {\n      data: dataYearly,\n      margin: {\n        top: 20,\n        left: -15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      tickLine: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      tickLine: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(CartesianGrid, {\n      vertical: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"uv\",\n      name: \"Sales\",\n      fill: \"#ff4861\",\n      barSize: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(BarChart, {\n      data: dataMontly,\n      margin: {\n        top: 20,\n        left: -15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      tickLine: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      tickLine: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(CartesianGrid, {\n      vertical: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"uv\",\n      name: \"Sales\",\n      fill: \"#4ce1b6\",\n      barSize: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sales\",\n      className: \"toggle-btn dashboard__sales-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"toggle-btn__input\",\n      type: \"checkbox\",\n      name: \"sales\",\n      id: \"sales\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dashboard__sales-toggle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Yearly\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"toggle-btn__input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dashboard__sales-toggle-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Monthly\")));\n  }\n\n}\n\nSalesStatistisBar.propTypes = {\n  t: PropTypes.func.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(withTranslation('common')(SalesStatistisBar));","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Dashboards/ECommerce/components/SalesStatistisBar.jsx"],"names":["React","PureComponent","connect","BarChart","Bar","ResponsiveContainer","Tooltip","XAxis","YAxis","CartesianGrid","withTranslation","PropTypes","Panel","getTooltipStyles","dataYearly","name","uv","dataMontly","SalesStatistisBar","constructor","handleChange","setState","prevState","yearly","state","render","t","themeName","props","top","left","propTypes","func","isRequired","string","theme","className"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid,\n} from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\n\nimport getTooltipStyles from '../../../../shared/helpers';\n\nconst dataYearly = [\n  { name: 'Jan', uv: 4000 },\n  { name: 'Feb', uv: 3000 },\n  { name: 'Mar', uv: 2000 },\n  { name: 'Apr', uv: 2780 },\n  { name: 'May', uv: 1890 },\n  { name: 'June', uv: 2390 },\n  { name: 'July', uv: 3490 },\n  { name: 'Aug', uv: 2000 },\n  { name: 'Sep', uv: 2780 },\n  { name: 'Oct', uv: 1890 },\n  { name: 'Nov', uv: 3578 },\n  { name: 'Dec', uv: 2378 },\n];\n\nconst dataMontly = [\n  { name: '01.02', uv: 3654 },\n  { name: '02.02', uv: 2578 },\n  { name: '03.02', uv: 2000 },\n  { name: '04.02', uv: 4383 },\n  { name: '05.02', uv: 1890 },\n  { name: '06.02', uv: 2390 },\n  { name: '07.02', uv: 3490 },\n  { name: '08.02', uv: 2000 },\n  { name: '09.02', uv: 2780 },\n  { name: '10.02', uv: 1890 },\n  { name: '11.02', uv: 3578 },\n  { name: '12.02', uv: 3644 },\n  { name: '13.02', uv: 4000 },\n  { name: '14.02', uv: 3000 },\n  { name: '15.02', uv: 2000 },\n  { name: '16.02', uv: 2780 },\n  { name: '17.02', uv: 1890 },\n  { name: '18.02', uv: 2390 },\n  { name: '19.02', uv: 3490 },\n  { name: '20.02', uv: 2000 },\n  { name: '21.02', uv: 2780 },\n  { name: '22.02', uv: 1890 },\n  { name: '23.02', uv: 3578 },\n  { name: '24.02', uv: 2390 },\n  { name: '25.02', uv: 3578 },\n  { name: '26.02', uv: 1890 },\n  { name: '27.02', uv: 4000 },\n  { name: '28.02', uv: 2378 },\n];\n\nclass SalesStatistisBar extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    themeName: PropTypes.string.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      yearly: true,\n    };\n  }\n\n  handleChange = () => {\n    this.setState(prevState => ({ yearly: !prevState.yearly }));\n  };\n\n  render() {\n    const { t, themeName } = this.props;\n    const { yearly } = this.state;\n\n    return (\n      <Panel\n        xl={3}\n        lg={7}\n        md={12}\n        title={t('dashboard_commerce.sales_statistic')}\n        subhead=\"See how effective your business is\"\n      >\n        <div dir=\"ltr\">\n          <ResponsiveContainer height={260}>\n            {yearly\n              ? (\n                <BarChart data={dataYearly} margin={{ top: 20, left: -15 }}>\n                  <XAxis dataKey=\"name\" tickLine={false} />\n                  <YAxis tickLine={false} />\n                  <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n                  <CartesianGrid vertical={false} />\n                  <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#ff4861\" barSize={10} />\n                </BarChart>\n              )\n              : (\n                <BarChart data={dataMontly} margin={{ top: 20, left: -15 }}>\n                  <XAxis dataKey=\"name\" tickLine={false} />\n                  <YAxis tickLine={false} />\n                  <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n                  <CartesianGrid vertical={false} />\n                  <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#4ce1b6\" barSize={4} />\n                </BarChart>\n              )\n            }\n\n          </ResponsiveContainer>\n        </div>\n        <hr />\n        <label htmlFor=\"sales\" className=\"toggle-btn dashboard__sales-toggle\">\n          <input className=\"toggle-btn__input\" type=\"checkbox\" name=\"sales\" id=\"sales\" onChange={this.handleChange} />\n          <span className=\"dashboard__sales-toggle-left\">Yearly</span>\n          <span className=\"toggle-btn__input-label\" />\n          <span className=\"dashboard__sales-toggle-right\">Monthly</span>\n        </label>\n\n      </Panel>\n    );\n  }\n}\n\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(SalesStatistisBar));\n"]},"metadata":{},"sourceType":"module"}