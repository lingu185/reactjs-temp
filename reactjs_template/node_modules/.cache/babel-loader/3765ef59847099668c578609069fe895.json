{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\auth\\\\withAuth0.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport function hookAuth0(WrappedComponent) {\n  return function HockComponent(props) {\n    const auth0 = useAuth0();\n    return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, props, {\n      auth0: auth0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }));\n  };\n}\n\nconst Auth0Provider = ({\n  children,\n  onRedirectCallback,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const {\n          appState\n        } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuth = await auth0FromHook.isAuthenticated();\n      setIsAuthenticated(isAuth);\n\n      if (isAuth) {\n        const currentUser = await auth0FromHook.getUser();\n        setUser(currentUser);\n      }\n\n      setLoading(false);\n    };\n\n    initAuth0(); // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      // eslint-disable-next-line\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n\n    const currentUser = await auth0Client.getUser();\n    setUser(currentUser);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const currentUser = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(currentUser);\n  };\n\n  return /*#__PURE__*/React.createElement(Auth0Context.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      popupOpen,\n      loginWithPopup,\n      handleRedirectCallback,\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nAuth0Provider.propTypes = {\n  children: PropTypes.node.isRequired,\n  onRedirectCallback: PropTypes.func\n};\nAuth0Provider.defaultProps = {\n  onRedirectCallback: () => window.history.replaceState({}, document.title, window.location.pathname)\n};\nexport default Auth0Provider;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/auth/withAuth0.jsx"],"names":["React","useState","useEffect","useContext","PropTypes","createAuth0Client","Auth0Context","createContext","useAuth0","hookAuth0","WrappedComponent","HockComponent","props","auth0","Auth0Provider","children","onRedirectCallback","initOptions","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","initAuth0","auth0FromHook","window","location","search","includes","appState","handleRedirectCallback","isAuth","currentUser","getUser","loginWithPopup","params","error","console","getIdTokenClaims","p","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","propTypes","node","isRequired","func","defaultProps","history","replaceState","document","title","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport function hookAuth0(WrappedComponent) {\n  return function HockComponent(props) {\n    const auth0 = useAuth0();\n    return <WrappedComponent {...props} auth0={auth0} />;\n  };\n}\n\nconst Auth0Provider = ({\n  children,\n  onRedirectCallback,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuth = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuth);\n\n      if (isAuth) {\n        const currentUser = await auth0FromHook.getUser();\n        setUser(currentUser);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      // eslint-disable-next-line\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const currentUser = await auth0Client.getUser();\n    setUser(currentUser);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const currentUser = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(currentUser);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n\nAuth0Provider.propTypes = {\n  children: PropTypes.node.isRequired,\n  onRedirectCallback: PropTypes.func,\n};\n\nAuth0Provider.defaultProps = {\n  onRedirectCallback: () => window.history.replaceState({}, document.title, window.location.pathname),\n};\n\nexport default Auth0Provider;\n"]},"metadata":{},"sourceType":"module"}