{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Dashboards\\\\Default\\\\components\\\\BestSellingRegions.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { compose, withProps } from 'recompose';\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport { MarkerClusterer } from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport Panel from '../../../../shared/components/Panel';\nimport silverMapStyle from './silverMapStyle.json';\nimport data from './data.json';\nconst Map = compose(withProps({\n  // create your api key\n  googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=&v=3.' + 'exp&libraries=geometry,drawing,places',\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    style: {\n      height: '360px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(GoogleMap, {\n  defaultZoom: 3,\n  defaultCenter: {\n    lat: 25.0391667,\n    lng: 121.525\n  },\n  defaultOptions: {\n    styles: silverMapStyle\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(MarkerClusterer, {\n  averageCenter: true,\n  enableRetinaIcons: true,\n  gridSize: 60,\n  styles: [{\n    url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n    height: 53,\n    width: 53\n  }, {\n    url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n    height: 56,\n    width: 56\n  }, {\n    url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n    height: 66,\n    width: 66\n  }, {\n    url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n    height: 78,\n    width: 78\n  }, {\n    url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n    height: 90,\n    width: 90\n  }],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, props.markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n  key: marker.photo_id,\n  position: {\n    lat: marker.latitude,\n    lng: marker.longitude\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }\n})))));\n\nconst BestSellingRegions = ({\n  t\n}) => /*#__PURE__*/React.createElement(Panel, {\n  xs: 12,\n  md: 12,\n  lg: 12,\n  xl: 8,\n  title: t('dashboard_default.best_selling'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  dir: \"ltr\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Map, {\n  markers: data.photos,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }\n})));\n\nBestSellingRegions.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(BestSellingRegions);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Dashboards/Default/components/BestSellingRegions.jsx"],"names":["React","withTranslation","PropTypes","compose","withProps","GoogleMap","Marker","withGoogleMap","withScriptjs","MarkerClusterer","Panel","silverMapStyle","data","Map","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","styles","url","process","env","PUBLIC_URL","width","markers","map","marker","photo_id","latitude","longitude","BestSellingRegions","t","photos","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { compose, withProps } from 'recompose';\nimport {\n  GoogleMap, Marker, withGoogleMap, withScriptjs,\n} from 'react-google-maps';\nimport { MarkerClusterer } from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport Panel from '../../../../shared/components/Panel';\nimport silverMapStyle from './silverMapStyle.json';\n\nimport data from './data.json';\n\nconst Map = compose(\n  withProps({\n    // create your api key\n    googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=&v=3.'\n    + 'exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: '100%' }} />,\n    containerElement: <div className=\"map\" style={{ height: '360px' }} />,\n    mapElement: <div style={{ height: '100%' }} />,\n  }),\n  withScriptjs,\n  withGoogleMap,\n)(props => (\n  <GoogleMap\n    defaultZoom={3}\n    defaultCenter={{ lat: 25.0391667, lng: 121.525 }}\n    defaultOptions={{ styles: silverMapStyle }}\n  >\n    <MarkerClusterer\n      averageCenter\n      enableRetinaIcons\n      gridSize={60}\n      styles={[\n        {\n          url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n          height: 53,\n          width: 53,\n        },\n        {\n          url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n          height: 56,\n          width: 56,\n        },\n        {\n          url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n          height: 66,\n          width: 66,\n        },\n        {\n          url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n          height: 78,\n          width: 78,\n        },\n        {\n          url: `${process.env.PUBLIC_URL}/img/map_markers/m1.png`,\n          height: 90,\n          width: 90,\n        },\n      ]}\n    >\n      {props.markers.map(marker => (\n        <Marker\n          key={marker.photo_id}\n          position={{ lat: marker.latitude, lng: marker.longitude }}\n        />\n      ))}\n    </MarkerClusterer>\n  </GoogleMap>\n));\n\nconst BestSellingRegions = ({ t }) => (\n  <Panel xs={12} md={12} lg={12} xl={8} title={t('dashboard_default.best_selling')}>\n    <div dir=\"ltr\">\n      <Map markers={data.photos} />\n    </div>\n  </Panel>\n);\n\nBestSellingRegions.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation('common')(BestSellingRegions);\n"]},"metadata":{},"sourceType":"module"}