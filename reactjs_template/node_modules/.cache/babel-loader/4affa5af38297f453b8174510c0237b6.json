{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\UI\\\\Tooltips\\\\components\\\\PopoverLeft.jsx\";\nimport React, { PureComponent } from 'react';\nimport { ButtonToolbar, Card, CardBody, Col, Button, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nclass PopoverLeft extends PureComponent {\n  constructor() {\n    super();\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        popoverOpen: !prevState.popoverOpen\n      }));\n    };\n\n    this.state = {\n      popoverOpen: false\n    };\n  }\n\n  render() {\n    const {\n      t,\n      dir\n    } = this.props;\n    const {\n      popoverOpen\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      lg: 6,\n      xl: 3,\n      className: \"card-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"bold-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, t('ui_elements.tooltips_popovers.popover_on_left')), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"subhead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Use popover with placement \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 66\n      }\n    }, \"left\"))), /*#__PURE__*/React.createElement(ButtonToolbar, {\n      className: \"btn-toolbar--center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"PopoverLeft\",\n      onClick: this.toggle,\n      outline: true,\n      className: \"button-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"Popover on Left\"), /*#__PURE__*/React.createElement(Popover, {\n      placement: \"left\",\n      isOpen: popoverOpen,\n      target: \"PopoverLeft\",\n      toggle: this.toggle,\n      dir: dir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Popover on Left\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\"))))));\n  }\n\n}\n\nPopoverLeft.propTypes = {\n  t: PropTypes.func.isRequired,\n  dir: PropTypes.string.isRequired\n};\nexport default withTranslation('common')(PopoverLeft);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/UI/Tooltips/components/PopoverLeft.jsx"],"names":["React","PureComponent","ButtonToolbar","Card","CardBody","Col","Button","Popover","PopoverBody","PopoverHeader","withTranslation","PropTypes","PopoverLeft","constructor","toggle","setState","prevState","popoverOpen","state","render","t","dir","props","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SACEC,aADF,EACiBC,IADjB,EACuBC,QADvB,EACiCC,GADjC,EACsCC,MADtC,EAC8CC,OAD9C,EACuDC,WADvD,EACoEC,aADpE,QAEO,YAFP;AAGA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BX,aAA1B,CAAwC;AAMtCY,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,MAPc,GAOL,MAAM;AACb,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEC,QAAAA,WAAW,EAAE,CAACD,SAAS,CAACC;AAA1B,OAAL,CAAvB;AACD,KATa;;AAEZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAMDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAa,KAAKC,KAAxB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AAEA,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAoB,MAAA,EAAE,EAAE,CAAxB;AAA2B,MAAA,EAAE,EAAE,CAA/B;AAAkC,MAAA,SAAS,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BE,CAAC,CAAC,+CAAD,CAA5B,CADF,eAEE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAmD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnD,CAFF,CADF,eAKE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,qBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAE,KAAKN,MAAvC;AAA+C,MAAA,OAAO,MAAtD;AAAuD,MAAA,SAAS,EAAC,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,MAAM,EAAEG,WAFV;AAGE,MAAA,MAAM,EAAC,aAHT;AAIE,MAAA,MAAM,EAAE,KAAKH,MAJf;AAKE,MAAA,GAAG,EAAEO,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,eAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIARF,CAJF,CALF,CADF,CADF,CADF;AA6BD;;AAlDqC;;AAAlCT,W,CACGW,S,GAAY;AACjBH,EAAAA,CAAC,EAAET,SAAS,CAACa,IAAV,CAAeC,UADD;AAEjBJ,EAAAA,GAAG,EAAEV,SAAS,CAACe,MAAV,CAAiBD;AAFL,C;AAoDrB,eAAef,eAAe,CAAC,QAAD,CAAf,CAA0BE,WAA1B,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  ButtonToolbar, Card, CardBody, Col, Button, Popover, PopoverBody, PopoverHeader,\n} from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nclass PopoverLeft extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    dir: PropTypes.string.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      popoverOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ popoverOpen: !prevState.popoverOpen }));\n  };\n\n  render() {\n    const { t, dir } = this.props;\n    const { popoverOpen } = this.state;\n\n    return (\n      <Col sm={12} md={6} lg={6} xl={3} className=\"card-tooltip\">\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{t('ui_elements.tooltips_popovers.popover_on_left')}</h5>\n              <h5 className=\"subhead\">Use popover with placement <span className=\"red-text\">left</span></h5>\n            </div>\n            <ButtonToolbar className=\"btn-toolbar--center\">\n              <Button id=\"PopoverLeft\" onClick={this.toggle} outline className=\"button-tooltip\">\n                Popover on Left\n              </Button>\n              <Popover\n                placement=\"left\"\n                isOpen={popoverOpen}\n                target=\"PopoverLeft\"\n                toggle={this.toggle}\n                dir={dir}\n              >\n                <PopoverHeader>Popover on Left</PopoverHeader>\n                <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem\n                  lacinia quam venenatis vestibulum.\n                </PopoverBody>\n              </Popover>\n            </ButtonToolbar>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withTranslation('common')(PopoverLeft);\n"]},"metadata":{},"sourceType":"module"}