{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\SketchColorPicker.jsx\";\nimport React, { PureComponent } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass SketchColorPickerField extends PureComponent {\n  constructor() {\n    super();\n\n    this.handleClick = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        displayColorPicker: !prevState.displayColorPicker,\n        active: !prevState.active\n      }));\n    };\n\n    this.handleChange = color => {\n      const {\n        onChange\n      } = this.props;\n      this.setState({\n        color: color.hex,\n        rgb: color.rgb\n      });\n      onChange(color);\n    };\n\n    this.state = {\n      displayColorPicker: false,\n      color: '#ff4861',\n      rgb: {\n        r: 246,\n        g: 129,\n        b: 110,\n        a: 1\n      },\n      active: false\n    };\n  }\n\n  render() {\n    const {\n      name\n    } = this.props;\n    const {\n      active,\n      color,\n      displayColorPicker,\n      rgb\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-picker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: `color-picker__button${active ? ' active' : ''}`,\n      onClick: this.handleClick,\n      id: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"color-picker__color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, color), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-picker__color-view\",\n      style: {\n        backgroundColor: color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Popover, {\n      isOpen: displayColorPicker,\n      target: name,\n      placement: \"bottom\",\n      className: \"color-picker__popover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SketchPicker, {\n      color: rgb,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nSketchColorPickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nconst renderSketchColorPickerField = props => {\n  const {\n    input,\n    meta\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__form-group-input-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SketchColorPickerField, Object.assign({}, input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })), meta.touched && meta.error && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form__form-group-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }\n  }, meta.error));\n};\n\nrenderSketchColorPickerField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderSketchColorPickerField.defaultProps = {\n  meta: null\n};\nexport default renderSketchColorPickerField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/SketchColorPicker.jsx"],"names":["React","PureComponent","SketchPicker","Popover","PropTypes","SketchColorPickerField","constructor","handleClick","e","preventDefault","setState","prevState","displayColorPicker","active","handleChange","color","onChange","props","hex","rgb","state","r","g","b","a","render","name","backgroundColor","propTypes","func","isRequired","string","renderSketchColorPickerField","input","meta","touched","error","shape","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass SketchColorPickerField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      displayColorPicker: false,\n      color: '#ff4861',\n      rgb: {\n        r: 246, g: 129, b: 110, a: 1,\n      },\n      active: false,\n    };\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ displayColorPicker: !prevState.displayColorPicker, active: !prevState.active }));\n  };\n\n  handleChange = (color) => {\n    const { onChange } = this.props;\n    this.setState({ color: color.hex, rgb: color.rgb });\n    onChange(color);\n  };\n\n  render() {\n    const { name } = this.props;\n    const {\n      active, color, displayColorPicker, rgb,\n    } = this.state;\n\n    return (\n      <div className=\"color-picker\">\n        <button\n          type=\"button\"\n          className={`color-picker__button${active ? ' active' : ''}`}\n          onClick={this.handleClick}\n          id={name}\n        >\n          <p className=\"color-picker__color\">{color}</p>\n          <div className=\"color-picker__color-view\" style={{ backgroundColor: color }} />\n        </button>\n        <Popover\n          isOpen={displayColorPicker}\n          target={name}\n          placement=\"bottom\"\n          className=\"color-picker__popover\"\n        >\n          <SketchPicker\n            color={rgb}\n            onChange={this.handleChange}\n          />\n        </Popover>\n      </div>\n    );\n  }\n}\n\nconst renderSketchColorPickerField = (props) => {\n  const { input, meta } = props;\n  return (\n    <div className=\"form__form-group-input-wrap\">\n      <SketchColorPickerField\n        {...input}\n      />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderSketchColorPickerField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n};\n\nrenderSketchColorPickerField.defaultProps = {\n  meta: null,\n};\n\nexport default renderSketchColorPickerField;\n"]},"metadata":{},"sourceType":"module"}