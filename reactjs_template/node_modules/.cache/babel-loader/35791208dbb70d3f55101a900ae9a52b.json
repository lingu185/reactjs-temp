{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\shared\\\\components\\\\form\\\\DropZoneMultiple.jsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\n\nclass DropZoneMultipleField extends PureComponent {\n  constructor() {\n    super();\n\n    this.removeFile = (index, e) => {\n      const {\n        value,\n        onChange\n      } = this.props;\n      e.preventDefault();\n      onChange(value.filter((val, i) => i !== index));\n    };\n\n    this.state = {};\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(files) {\n    const {\n      onChange\n    } = this.props;\n    onChange(files.map(fl => Object.assign(fl, {\n      preview: URL.createObjectURL(fl)\n    })));\n  }\n\n  render() {\n    const {\n      name,\n      value\n    } = this.props;\n    const files = value;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone dropzone--multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      className: \"dropzone__input\",\n      accept: \"image/jpeg, image/png\",\n      name: name,\n      onDrop: filesToUpload => {\n        this.onDrop(value ? value.concat(filesToUpload) : filesToUpload);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: \"dropzone__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), (!files || files.length === 0) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone__drop-here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lnr lnr-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }), \" Drop file here to upload\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })))), files && Array.isArray(files) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone__imgs-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, files.map((file, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone__img\",\n      key: i,\n      style: {\n        backgroundImage: `url(${file.preview})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropzone__img-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, file.name), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropzone__img-delete\",\n      type: \"button\",\n      onClick: e => this.removeFile(i, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Remove\")))));\n  }\n\n}\n\nDropZoneMultipleField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string\n  }))]).isRequired\n};\n\nconst renderDropZoneMultipleField = props => {\n  const {\n    input\n  } = props;\n  return /*#__PURE__*/React.createElement(DropZoneMultipleField, Object.assign({}, input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }));\n};\n\nrenderDropZoneMultipleField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired\n};\nexport default renderDropZoneMultipleField;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/shared/components/form/DropZoneMultiple.jsx"],"names":["React","PureComponent","Dropzone","PropTypes","DropZoneMultipleField","constructor","removeFile","index","e","value","onChange","props","preventDefault","filter","val","i","state","onDrop","bind","files","map","fl","Object","assign","preview","URL","createObjectURL","render","name","filesToUpload","concat","getRootProps","getInputProps","length","Array","isArray","file","backgroundImage","propTypes","func","isRequired","string","oneOfType","arrayOf","shape","renderDropZoneMultipleField","input"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\n\nclass DropZoneMultipleField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n      })),\n    ]).isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {};\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(files) {\n    const { onChange } = this.props;\n    onChange(files.map(fl => Object.assign(fl, {\n      preview: URL.createObjectURL(fl),\n    })));\n  }\n\n  removeFile= (index, e) => {\n    const { value, onChange } = this.props;\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  };\n\n  render() {\n    const { name, value } = this.props;\n    const files = value;\n\n    return (\n      <div className=\"dropzone dropzone--multiple\">\n        <Dropzone\n          className=\"dropzone__input\"\n          accept=\"image/jpeg, image/png\"\n          name={name}\n          onDrop={(filesToUpload) => {\n            this.onDrop(value ? value.concat(filesToUpload) : filesToUpload);\n          }}\n        >\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps()} className=\"dropzone__input\">\n              {(!files || files.length === 0)\n              && (\n                <div className=\"dropzone__drop-here\">\n                  <span className=\"lnr lnr-upload\" /> Drop file here to upload\n                </div>\n              )}\n              <input {...getInputProps()} />\n            </div>\n          )}\n        </Dropzone>\n        {files && Array.isArray(files)\n        && (\n        <div className=\"dropzone__imgs-wrapper\">\n          {files.map((file, i) => (\n            <div className=\"dropzone__img\" key={i} style={{ backgroundImage: `url(${file.preview})` }}>\n              <p className=\"dropzone__img-name\">{file.name}</p>\n              <button className=\"dropzone__img-delete\" type=\"button\" onClick={e => this.removeFile(i, e)}>\n                Remove\n              </button>\n            </div>\n          ))}\n        </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst renderDropZoneMultipleField = (props) => {\n  const { input } = props;\n  return (\n    <DropZoneMultipleField\n      {...input}\n    />\n  );\n};\n\nrenderDropZoneMultipleField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default renderDropZoneMultipleField;\n"]},"metadata":{},"sourceType":"module"}