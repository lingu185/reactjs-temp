{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Charts\\\\ChartJs\\\\components\\\\LegendHandlers.jsx\";\n\n/* eslint-disable no-alert */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow'],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    borderColor: 'rgba(255,255,255,0.54)'\n  }]\n};\nconst legendOpts = {\n  onClick: (e, item) => alert(`Item with text ${item.text} and index ${item.index} clicked`)\n};\n\nclass PolarArea extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      legend: legendOpts\n    };\n    this.applyLegendSettings = this.applyLegendSettings.bind(this);\n  }\n\n  applyLegendSettings() {\n    const {\n      value\n    } = this.legendOptsInput;\n\n    try {\n      const opts = JSON.parse(value);\n      this.setState({\n        legend: opts\n      });\n    } catch (e) {\n      alert(e.message);\n      throw Error(e);\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const {\n      legend\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 12,\n      xl: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"bold-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, t('charts.react_chartjs.legend_handlers'))), /*#__PURE__*/React.createElement(Pie, {\n      data: data,\n      legend: legend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nPolarArea.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(PolarArea);","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Charts/ChartJs/components/LegendHandlers.jsx"],"names":["React","PureComponent","Card","CardBody","Col","Pie","withTranslation","PropTypes","data","labels","datasets","backgroundColor","hoverBackgroundColor","borderColor","legendOpts","onClick","e","item","alert","text","index","PolarArea","constructor","props","state","legend","applyLegendSettings","bind","value","legendOptsInput","opts","JSON","parse","setState","message","Error","render","t","propTypes","func","isRequired"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CACN,KADM,EAEN,MAFM,EAGN,QAHM,CADG;AAMXC,EAAAA,QAAQ,EAAE,CAAC;AACTF,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CADG;AAETG,IAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,CAFR;AAOTC,IAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,CAPb;AAYTC,IAAAA,WAAW,EAAE;AAZJ,GAAD;AANC,CAAb;AAsBA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAaC,KAAK,CAAE,kBAAiBD,IAAI,CAACE,IAAK,cAAaF,IAAI,CAACG,KAAM,UAArD;AADV,CAAnB;;AAIA,MAAMC,SAAN,SAAwBpB,aAAxB,CAAsC;AAKpCqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEX;AADG,KAAb;AAIA,SAAKY,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,mBAAmB,GAAG;AACpB,UAAM;AAAEE,MAAAA;AAAF,QAAY,KAAKC,eAAvB;;AAEA,QAAI;AACF,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAb;AACA,WAAKK,QAAL,CAAc;AACZR,QAAAA,MAAM,EAAEK;AADI,OAAd;AAGD,KALD,CAKE,OAAOd,CAAP,EAAU;AACVE,MAAAA,KAAK,CAACF,CAAC,CAACkB,OAAH,CAAL;AACA,YAAMC,KAAK,CAACnB,CAAD,CAAX;AACD;AACF;;AAEDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAQ,KAAKd,KAAnB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AAEA,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2Ba,CAAC,CAAC,sCAAD,CAA5B,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE7B,IAAX;AAAiB,MAAA,MAAM,EAAEiB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,CADF;AAYD;;AA5CmC;;AAAhCJ,S,CACGiB,S,GAAY;AACjBD,EAAAA,CAAC,EAAE9B,SAAS,CAACgC,IAAV,CAAeC;AADD,C;AA8CrB,eAAelC,eAAe,CAAC,QAAD,CAAf,CAA0Be,SAA1B,CAAf","sourcesContent":["/* eslint-disable no-alert */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst data = {\n  labels: [\n    'Red',\n    'Blue',\n    'Yellow',\n  ],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: [\n      '#FF6384',\n      '#36A2EB',\n      '#FFCE56',\n    ],\n    hoverBackgroundColor: [\n      '#FF6384',\n      '#36A2EB',\n      '#FFCE56',\n    ],\n    borderColor: 'rgba(255,255,255,0.54)',\n  }],\n};\n\nconst legendOpts = {\n  onClick: (e, item) => alert(`Item with text ${item.text} and index ${item.index} clicked`),\n};\n\nclass PolarArea extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      legend: legendOpts,\n    };\n\n    this.applyLegendSettings = this.applyLegendSettings.bind(this);\n  }\n\n  applyLegendSettings() {\n    const { value } = this.legendOptsInput;\n\n    try {\n      const opts = JSON.parse(value);\n      this.setState({\n        legend: opts,\n      });\n    } catch (e) {\n      alert(e.message);\n      throw Error(e);\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { legend } = this.state;\n\n    return (\n      <Col md={12} lg={12} xl={6}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{t('charts.react_chartjs.legend_handlers')}</h5>\n            </div>\n            <Pie data={data} legend={legend} />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withTranslation('common')(PolarArea);\n"]},"metadata":{},"sourceType":"module"}