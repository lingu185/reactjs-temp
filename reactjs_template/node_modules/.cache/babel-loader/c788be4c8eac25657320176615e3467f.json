{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_template\\\\reactjs_template\\\\src\\\\containers\\\\Documentation\\\\04_components\\\\components\\\\Buttons.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Table } from 'reactstrap';\nimport CodeHighlither from '../../../../shared/components/CodeHighlither';\n\nconst Buttons = () => /*#__PURE__*/React.createElement(Card, {\n  className: \"card--not-full-height\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, \"Buttons\")), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, \"Buttons are based on\", /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://reactstrap.github.io/components/buttons/Buttons.jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, \" reactstrap\"), \". Example of using this component here:\"), /*#__PURE__*/React.createElement(CodeHighlither, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, `import React, {PureComponent} from 'react';\nimport {Button, ButtonToolbar} from 'reactstrap';\n\nexport default class Example extends PureComponent {\n  render() {\n    return (\n      <ButtonToolbar>\n        <Button outline>Minimal</Button>\n        <Button disabled>Disabled</Button>\n        <Button color='primary'>Primary</Button>\n        <Button color='success'>Success</Button>\n        <Button color='warning'>Warning</Button>\n        <Button className='icon' color='danger'><p><CloseCircleOutlineIcon/> Warning</p></Button>\n        <Button className='icon icon--right' color='primary' outline><p>Settings <SendIcon/></p></Button>\n      </ButtonToolbar>\n    )\n  }\n}`), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}, \"All props of Button\", /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://reactstrap.github.io/components/buttons/Buttons.jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, \" here\"), \". There are some of them:\"), /*#__PURE__*/React.createElement(Table, {\n  responsive: true,\n  className: \"table--bordered table--head-accent\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"thead\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }\n}, \"Property\"), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }\n}, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }\n}, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }\n}, \"color\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }\n}, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }\n}, \"You can choose one of four colors:\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 15\n  }\n}, \" \", ' \\'info\\''), \",\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 15\n  }\n}, \" \", ' \\'primary\\''), \",\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 15\n  }\n}, \" \", '\\'warning\\''), \" or\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 15\n  }\n}, \" \", '\\'danger\\''))), /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }\n}, \"outline\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }\n}, \"bool\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }\n}, \"Outline or filled button\")), /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }\n}, \"size\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }\n}, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 15\n  }\n}, \" \", '\\'sm\\''), \" for small buttons and\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 15\n  }\n}, \" \", '\\'lg\\' '), \"for large\")), /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }\n}, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }\n}, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 15\n  }\n}, '\\'icon\\''), \",\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 15\n  }\n}, \" \", '\\'icon icon--right\\''), \" for buttons with icons,\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 15\n  }\n}, \" \", '\\'rounded\\''), \" for buttons without corners,\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 15\n  }\n}, \" \", '\\'square\\''), \" for rectangular buttons\")))), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }\n}, \"Expand\")), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }\n}, \" Expand is based on Button above, but with loading effect. You have to write your own loading logic to use it. The component replaced in \", /*#__PURE__*/React.createElement(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 39\n  }\n}, \"template/src/components/Expand.js\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }\n}, \"Button Groups\")), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }\n}, \"More about ButtonGroup \", /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://reactstrap.github.io/components/button-group/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 32\n  }\n}, \"here\"), \". The template has examples with next values of \", /*#__PURE__*/React.createElement(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 51\n  }\n}, \"className\"), \":\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }\n}, \" \", '\\'btn-group--icons\\''), \" and\", /*#__PURE__*/React.createElement(\"span\", {\n  className: \"red-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }\n}, \" \", '\\'btn-group--justified\\''), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 7\n  }\n}, \"Stylesheet: \", /*#__PURE__*/React.createElement(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 22\n  }\n}, \"template/src/scss/components/btn.scss\"))));\n\nexport default Buttons;","map":{"version":3,"sources":["D:/reactjs_template/reactjs_template/src/containers/Documentation/04_components/components/Buttons.jsx"],"names":["React","Card","CardBody","Table","CodeHighlither","Buttons"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Table } from 'reactstrap';\nimport CodeHighlither from '../../../../shared/components/CodeHighlither';\n\nconst Buttons = () => (\n  <Card className=\"card--not-full-height\">\n    <CardBody>\n      <div className=\"card__title\">\n        <h5 className=\"bold-text\">Buttons</h5>\n      </div>\n      <p>Buttons are based on\n        <a href=\"https://reactstrap.github.io/components/buttons/Buttons.jsx\"> reactstrap</a>. Example of\n        using this component here:\n      </p>\n      <CodeHighlither>\n        {`import React, {PureComponent} from 'react';\nimport {Button, ButtonToolbar} from 'reactstrap';\n\nexport default class Example extends PureComponent {\n  render() {\n    return (\n      <ButtonToolbar>\n        <Button outline>Minimal</Button>\n        <Button disabled>Disabled</Button>\n        <Button color='primary'>Primary</Button>\n        <Button color='success'>Success</Button>\n        <Button color='warning'>Warning</Button>\n        <Button className='icon' color='danger'><p><CloseCircleOutlineIcon/> Warning</p></Button>\n        <Button className='icon icon--right' color='primary' outline><p>Settings <SendIcon/></p></Button>\n      </ButtonToolbar>\n    )\n  }\n}`}\n      </CodeHighlither>\n      <p>All props of Button\n        <a href=\"https://reactstrap.github.io/components/buttons/Buttons.jsx\"> here</a>. There are some of them:\n      </p>\n      <Table responsive className=\"table--bordered table--head-accent\">\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Type</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>color</td>\n            <td>string</td>\n            <td>You can choose one of four colors:\n              <span className=\"red-text\"> {' \\'info\\''}</span>,\n              <span className=\"red-text\"> {' \\'primary\\''}</span>,\n              <span className=\"red-text\"> {'\\'warning\\''}</span> or\n              <span className=\"red-text\"> {'\\'danger\\''}</span>\n            </td>\n          </tr>\n          <tr>\n            <td>outline</td>\n            <td>bool</td>\n            <td>Outline or filled button</td>\n          </tr>\n          <tr>\n            <td>size</td>\n            <td>string</td>\n            <td>\n              <span className=\"red-text\"> {'\\'sm\\''}</span> for small buttons and\n              <span className=\"red-text\"> {'\\'lg\\' '}</span>\n              for large\n            </td>\n          </tr>\n          <tr>\n            <td>className</td>\n            <td>string</td>\n            <td>\n              <span className=\"red-text\">{'\\'icon\\''}</span>,\n              <span className=\"red-text\"> {'\\'icon icon--right\\''}</span> for\n              buttons with icons,\n              <span className=\"red-text\"> {'\\'rounded\\''}</span> for buttons without corners,\n              <span className=\"red-text\"> {'\\'square\\''}</span> for rectangular buttons\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <div className=\"card__title\">\n        <h5 className=\"bold-text\">Expand</h5>\n      </div>\n      <p> Expand is based on Button above, but with loading effect. You have to write your own loading logic to use\n        it. The component replaced in <b>template/src/components/Expand.js</b>\n      </p>\n\n      <div className=\"card__title\">\n        <h5 className=\"bold-text\">Button Groups</h5>\n      </div>\n      <p>\n        More about ButtonGroup <a href=\"https://reactstrap.github.io/components/button-group/\">here</a>. The\n        template has examples with next values of <b>className</b>:\n        <span className=\"red-text\"> {'\\'btn-group--icons\\''}</span> and\n        <span className=\"red-text\"> {'\\'btn-group--justified\\''}</span>.\n      </p>\n      <p>Stylesheet: <b>template/src/scss/components/btn.scss</b></p>\n    </CardBody>\n  </Card>\n);\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}